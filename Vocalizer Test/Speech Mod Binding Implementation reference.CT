<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="38">
  <CheatEntries>
    <CheatEntry>
      <ID>200</ID>
      <Description>"SCRIPTS HIGHLIGHTED IN BLUE ARE IN QOL"</Description>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>201</ID>
      <Description>"SCRIPTS HIGHLIGHTED IN RED WILL BE IN .EXE"</Description>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>0000FF</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>154</ID>
      <Description>"[00A2B92E] (1) Removes *4 Offset for More Space (Contains limit)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-17
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62B92E)
define(bytes,8B 84 AE 44 02 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edi,byte ptr[esi+ebp+00000190]
  movzx eax,byte ptr[esi+ebp+00000244]
  jmp 00A2B93C

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[esi+ebp*4+00000244]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62B92E

re5dx9.exe+62B90A: 8B F8                 - mov edi,eax
re5dx9.exe+62B90C: E8 CF DD D8 FF        - call re5dx9.exe+3B96E0
re5dx9.exe+62B911: 8B 4E 44              - mov ecx,[esi+44]
re5dx9.exe+62B914: 3B CF                 - cmp ecx,edi
re5dx9.exe+62B916: 89 44 24 14           - mov [esp+14],eax
re5dx9.exe+62B91A: 0F 85 17 01 00 00     - jne re5dx9.exe+62BA37
re5dx9.exe+62B920: 8B 56 4C              - mov edx,[esi+4C]
re5dx9.exe+62B923: 3B D0                 - cmp edx,eax
re5dx9.exe+62B925: 0F 85 0C 01 00 00     - jne re5dx9.exe+62BA37
re5dx9.exe+62B92B: 8D 2C 11              - lea ebp,[ecx+edx]
// ---------- INJECTING HERE ----------
re5dx9.exe+62B92E: 8B 84 AE 44 02 00 00  - mov eax,[esi+ebp*4+00000244]
// ---------- DONE INJECTING  ----------
re5dx9.exe+62B935: 8B BC AE 90 01 00 00  - mov edi,[esi+ebp*4+00000190]
re5dx9.exe+62B93C: 32 C9                 - xor cl,cl
re5dx9.exe+62B93E: 32 DB                 - xor bl,bl
re5dx9.exe+62B940: 83 FD 05              - cmp ebp,05
re5dx9.exe+62B943: 89 44 24 1C           - mov [esp+1C],eax
re5dx9.exe+62B947: 88 4C 24 13           - mov [esp+13],cl
re5dx9.exe+62B94B: 7D 35                 - jnl re5dx9.exe+62B982
re5dx9.exe+62B94D: 8B 0D 24 31 1A 01     - mov ecx,[re5dx9.exe+DA3124]
re5dx9.exe+62B953: 6A 01                 - push 01
re5dx9.exe+62B955: 6A 00                 - push 00
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"[00A2BA04] (2) Removes *4 Offset for More Space"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62BA04)
define(bytes,39 BC AE 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,edi
  cmp [esi+ebp+00000190],al
  jmp 00A2BA0B

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // cmp [esi+ebp*4+00000190],edi

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62BA04

re5dx9.exe+62B9EC: BF 0F 00 00 00        - mov edi,0000000F
re5dx9.exe+62B9F1: EB 11                 - jmp re5dx9.exe+62BA04
re5dx9.exe+62B9F3: 85 C0                 - test eax,eax
re5dx9.exe+62B9F5: 75 04                 - jne re5dx9.exe+62B9FB
re5dx9.exe+62B9F7: 84 C9                 - test cl,cl
re5dx9.exe+62B9F9: 74 03                 - je re5dx9.exe+62B9FE
re5dx9.exe+62B9FB: 83 EF 01              - sub edi,01
re5dx9.exe+62B9FE: 85 FF                 - test edi,edi
re5dx9.exe+62BA00: 7D 02                 - jnl re5dx9.exe+62BA04
re5dx9.exe+62BA02: 33 FF                 - xor edi,edi
// ---------- INJECTING HERE ----------
re5dx9.exe+62BA04: 39 BC AE 90 01 00 00  - cmp [esi+ebp*4+00000190],edi
// ---------- DONE INJECTING  ----------
re5dx9.exe+62BA0B: 0F 84 27 FD FF FF     - je re5dx9.exe+62B738
re5dx9.exe+62BA11: 57                    - push edi
re5dx9.exe+62BA12: 55                    - push ebp
re5dx9.exe+62BA13: 8B CE                 - mov ecx,esi
re5dx9.exe+62BA15: 89 BC AE 90 01 00 00  - mov [esi+ebp*4+00000190],edi
re5dx9.exe+62BA1C: E8 9F D3 FF FF        - call re5dx9.exe+628DC0
re5dx9.exe+62BA21: 8B CE                 - mov ecx,esi
re5dx9.exe+62BA23: E8 98 CF FB FF        - call re5dx9.exe+5E89C0
re5dx9.exe+62BA28: 8B CE                 - mov ecx,esi
re5dx9.exe+62BA2A: E8 B1 D7 FF FF        - call re5dx9.exe+6291E0
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>16</ID>
      <Description>"[00A2BA15] (3) Removes *4 Offset for More Space"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62BA15)
define(bytes,89 BC AE 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [esi+ebp+00000190],al
  jmp 00A2BA1C

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov [esi+ebp*4+00000190],edi

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62BA15

re5dx9.exe+62B9F9: 74 03                 - je re5dx9.exe+62B9FE
re5dx9.exe+62B9FB: 83 EF 01              - sub edi,01
re5dx9.exe+62B9FE: 85 FF                 - test edi,edi
re5dx9.exe+62BA00: 7D 02                 - jnl re5dx9.exe+62BA04
re5dx9.exe+62BA02: 33 FF                 - xor edi,edi
re5dx9.exe+62BA04: 39 BC AE 90 01 00 00  - cmp [esi+ebp*4+00000190],edi
re5dx9.exe+62BA0B: 0F 84 27 FD FF FF     - je re5dx9.exe+62B738
re5dx9.exe+62BA11: 57                    - push edi
re5dx9.exe+62BA12: 55                    - push ebp
re5dx9.exe+62BA13: 8B CE                 - mov ecx,esi
// ---------- INJECTING HERE ----------
re5dx9.exe+62BA15: 89 BC AE 90 01 00 00  - mov [esi+ebp*4+00000190],edi
// ---------- DONE INJECTING  ----------
re5dx9.exe+62BA1C: E8 9F D3 FF FF        - call re5dx9.exe+628DC0
re5dx9.exe+62BA21: 8B CE                 - mov ecx,esi
re5dx9.exe+62BA23: E8 98 CF FB FF        - call re5dx9.exe+5E89C0
re5dx9.exe+62BA28: 8B CE                 - mov ecx,esi
re5dx9.exe+62BA2A: E8 B1 D7 FF FF        - call re5dx9.exe+6291E0
re5dx9.exe+62BA2F: 5B                    - pop ebx
re5dx9.exe+62BA30: 5F                    - pop edi
re5dx9.exe+62BA31: 5D                    - pop ebp
re5dx9.exe+62BA32: 5E                    - pop esi
re5dx9.exe+62BA33: 83 C4 10              - add esp,10
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>73</ID>
      <Description>"[00A2627F] (4) Removes *4 Offset for More Space"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62627F)
define(bytes,8B 8C AE 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx ecx,byte ptr[esi+ebp+00000190]
  jmp 00A26286

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov ecx,[esi+ebp*4+00000190]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62627F

re5dx9.exe+62625D: F7 E9                 - imul ecx
re5dx9.exe+62625F: C1 FA 05              - sar edx,05
re5dx9.exe+626262: 8B FA                 - mov edi,edx
re5dx9.exe+626264: C1 EF 1F              - shr edi,1F
re5dx9.exe+626267: 03 FA                 - add edi,edx
re5dx9.exe+626269: B8 01 00 00 00        - mov eax,00000001
re5dx9.exe+62626E: 8B 14 85 1C D1 11 01  - mov edx,[eax*4+re5dx9.exe+D1D11C]
re5dx9.exe+626275: 8B 46 4C              - mov eax,[esi+4C]
re5dx9.exe+626278: 8B 4C 24 1C           - mov ecx,[esp+1C]
re5dx9.exe+62627C: 8D 2C 08              - lea ebp,[eax+ecx]
// ---------- INJECTING HERE ----------
re5dx9.exe+62627F: 8B 8C AE 90 01 00 00  - mov ecx,[esi+ebp*4+00000190]
// ---------- DONE INJECTING  ----------
re5dx9.exe+626286: 89 4C 24 20           - mov [esp+20],ecx
re5dx9.exe+62628A: 8B 4E 44              - mov ecx,[esi+44]
re5dx9.exe+62628D: 03 C1                 - add eax,ecx
re5dx9.exe+62628F: 83 F8 0A              - cmp eax,0A
re5dx9.exe+626292: 89 54 24 14           - mov [esp+14],edx
re5dx9.exe+626296: 74 0A                 - je re5dx9.exe+6262A2
re5dx9.exe+626298: 8B 46 4C              - mov eax,[esi+4C]
re5dx9.exe+62629B: 03 C1                 - add eax,ecx
re5dx9.exe+62629D: 83 F8 17              - cmp eax,17
re5dx9.exe+6262A0: 75 16                 - jne re5dx9.exe+6262B8
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>18</ID>
      <Description>"[00A2681E] (5) Removes *4 Offset for More Space (Contains Limit)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62681E)
define(bytes,8B BC 86 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edi,byte ptr[esi+eax+00000190]
  movzx eax,byte ptr[esi+eax+00000244]
  test edi,edi
  jmp 00A2682E

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov edi,[esi+eax*4+00000190]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62681E

re5dx9.exe+6267FB: 8B 46 44              - mov eax,[esi+44]
re5dx9.exe+6267FE: 8B 4E 4C              - mov ecx,[esi+4C]
re5dx9.exe+626801: 03 C8                 - add ecx,eax
re5dx9.exe+626803: 83 F9 05              - cmp ecx,05
re5dx9.exe+626806: 0F 8D 7D 00 00 00     - jnl re5dx9.exe+626889
re5dx9.exe+62680C: 8B 6C 24 1C           - mov ebp,[esp+1C]
re5dx9.exe+626810: 3B E8                 - cmp ebp,eax
re5dx9.exe+626812: 0F 85 75 00 00 00     - jne re5dx9.exe+62688D
re5dx9.exe+626818: 8B 56 4C              - mov edx,[esi+4C]
re5dx9.exe+62681B: 8D 04 2A              - lea eax,[edx+ebp]
// ---------- INJECTING HERE ----------
re5dx9.exe+62681E: 8B BC 86 90 01 00 00  - mov edi,[esi+eax*4+00000190]
// ---------- DONE INJECTING  ----------
re5dx9.exe+626825: 85 FF                 - test edi,edi
re5dx9.exe+626827: 8B 84 86 44 02 00 00  - mov eax,[esi+eax*4+00000244]
re5dx9.exe+62682E: 89 44 24 30           - mov [esp+30],eax
re5dx9.exe+626832: 7E 24                 - jle re5dx9.exe+626858
re5dx9.exe+626834: 8D 4C 24 48           - lea ecx,[esp+48]
re5dx9.exe+626838: 68 40 85 FA 00        - push re5dx9.exe+BA8540
re5dx9.exe+62683D: 51                    - push ecx
re5dx9.exe+62683E: E8 66 BE 43 00        - call re5dx9.exe+A626A9
re5dx9.exe+626843: 83 C4 08              - add esp,08
re5dx9.exe+626846: 53                    - push ebx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>77</ID>
      <Description>"[00A2927A] (6) Removes *4 Offset for More Space"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62927A)
define(bytes,8B AC BE 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx ebp,byte ptr[esi+edi+00000190]
  jmp 00A29281

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov ebp,[esi+edi*4+00000190]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62927A

re5dx9.exe+62925D: 8B 10                    - mov edx,[eax]
re5dx9.exe+62925F: 0F 94 C0                 - sete al
re5dx9.exe+629262: 8B CE                    - mov ecx,esi
re5dx9.exe+629264: 89 54 24 14              - mov [esp+14],edx
re5dx9.exe+629268: 50                       - push eax
re5dx9.exe+629269: E8 E2 0D FF FF           - call re5dx9.exe+61A050
re5dx9.exe+62926E: D9 54 24 18              - fst dword ptr [esp+18]
re5dx9.exe+629272: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+629275: 8B 4E 44                 - mov ecx,[esi+44]
re5dx9.exe+629278: 03 F8                    - add edi,eax
// ---------- INJECTING HERE ----------
re5dx9.exe+62927A: 8B AC BE 90 01 00 00     - mov ebp,[esi+edi*4+00000190]
// ---------- DONE INJECTING  ----------
re5dx9.exe+629281: 0F B7 14 7D 28 CF 11 01  - movzx edx,word ptr [edi*2+re5dx9.exe+D1CF28]
re5dx9.exe+629289: 03 C1                    - add eax,ecx
re5dx9.exe+62928B: 83 F8 0A                 - cmp eax,0A
re5dx9.exe+62928E: 89 6C 24 28              - mov [esp+28],ebp
re5dx9.exe+629292: 74 0A                    - je re5dx9.exe+62929E
re5dx9.exe+629294: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+629297: 03 C1                    - add eax,ecx
re5dx9.exe+629299: 83 F8 17                 - cmp eax,17
re5dx9.exe+62929C: 75 1A                    - jne re5dx9.exe+6292B8
re5dx9.exe+62929E: 39 4C 24 20              - cmp [esp+20],ecx
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>155</ID>
      <Description>"[00A298CB] (7) Removes *4 Offset for More Space (Contains Limit)"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-17
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6298CB)
define(bytes,8B 8C 86 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx ecx,byte ptr[esi+eax+00000190]
  movzx eax,byte ptr[esi+eax+00000244]
  test ecx,ecx
  jmp 00A298DB

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov ecx,[esi+eax*4+00000190]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6298CB

re5dx9.exe+6298AF: 8B CE                 - mov ecx,esi
re5dx9.exe+6298B1: E8 9A F3 FB FF        - call re5dx9.exe+5E8C50
re5dx9.exe+6298B6: 8B 7E 44              - mov edi,[esi+44]
re5dx9.exe+6298B9: 8B 46 4C              - mov eax,[esi+4C]
re5dx9.exe+6298BC: 03 C7                 - add eax,edi
re5dx9.exe+6298BE: 83 F8 05              - cmp eax,05
re5dx9.exe+6298C1: 7D 44                 - jnl re5dx9.exe+629907
re5dx9.exe+6298C3: 8B 56 4C              - mov edx,[esi+4C]
re5dx9.exe+6298C6: 8B CF                 - mov ecx,edi
re5dx9.exe+6298C8: 8D 04 11              - lea eax,[ecx+edx]
// ---------- INJECTING HERE ----------
re5dx9.exe+6298CB: 8B 8C 86 90 01 00 00  - mov ecx,[esi+eax*4+00000190]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6298D2: 85 C9                 - test ecx,ecx
re5dx9.exe+6298D4: 8B 84 86 44 02 00 00  - mov eax,[esi+eax*4+00000244]
re5dx9.exe+6298DB: C6 44 24 24 00        - mov byte ptr [esp+24],00
re5dx9.exe+6298E0: 7E 05                 - jle re5dx9.exe+6298E7
re5dx9.exe+6298E2: C6 44 24 24 01        - mov byte ptr [esp+24],01
re5dx9.exe+6298E7: 83 C0 FF              - add eax,-01
re5dx9.exe+6298EA: 3B C8                 - cmp ecx,eax
re5dx9.exe+6298EC: 7D 05                 - jnl re5dx9.exe+6298F3
re5dx9.exe+6298EE: 80 4C 24 24 02        - or byte ptr [esp+24],02
re5dx9.exe+6298F3: 8B 44 24 24           - mov eax,[esp+24]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>217</ID>
      <Description>"[00A2991C] (8) Removes *4 Offset for More Space"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62991C)
define(bytes,8B 86 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  movzx eax,byte ptr[esi+00000190]
  jmp 00A29927
return:

[DISABLE]

address:
  db bytes
  // mov eax,[esi+00000190]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62991C

re5dx9.exe+6298FE: 50                    - push eax
re5dx9.exe+6298FF: 51                    - push ecx
re5dx9.exe+629900: 8B CE                 - mov ecx,esi
re5dx9.exe+629902: E8 39 0A FF FF        - call re5dx9.exe+61A340
re5dx9.exe+629907: 8B 46 4C              - mov eax,[esi+4C]
re5dx9.exe+62990A: 8B 56 44              - mov edx,[esi+44]
re5dx9.exe+62990D: 8D 0C 02              - lea ecx,[edx+eax]
re5dx9.exe+629910: E9 EB 66 F0 34        - jmp 35930000
re5dx9.exe+629915: 0F 1F 44 00 00        - nop dword ptr [eax+eax+00]
re5dx9.exe+62991A: 75 10                 - jne re5dx9.exe+62992C
// ---------- INJECTING HERE ----------
re5dx9.exe+62991C: 8B 86 90 01 00 00     - mov eax,[esi+00000190]
// ---------- DONE INJECTING  ----------
re5dx9.exe+629922: EB 03                 - jmp re5dx9.exe+629927
re5dx9.exe+629924: 90                    - nop 
re5dx9.exe+629925: 90                    - nop 
re5dx9.exe+629926: 90                    - nop 
re5dx9.exe+629927: 05 18 09 00 00        - add eax,00000918
re5dx9.exe+62992C: 83 BE F8 02 00 00 01  - cmp dword ptr [esi+000002F8],01
re5dx9.exe+629933: B3 14                 - mov bl,14
re5dx9.exe+629935: 75 0D                 - jne re5dx9.exe+629944
re5dx9.exe+629937: 66 3D F2 08           - cmp ax,08F2
re5dx9.exe+62993B: 75 11                 - jne re5dx9.exe+62994E
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>218</ID>
      <Description>"[00A268F9] (9) Removes *4 Offset for More Space"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6268F9)
define(bytes,8B 86 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:


address:
  movzx eax,byte ptr[esi+00000190]
  jmp 00A26904
return:

[DISABLE]

address:
  db bytes
  // mov eax,[esi+00000190]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6268F9

re5dx9.exe+6268D7: 68 28 85 FA 00        - push re5dx9.exe+BA8528
re5dx9.exe+6268DC: 8B CE                 - mov ecx,esi
re5dx9.exe+6268DE: E8 6D 26 FC FF        - call re5dx9.exe+5E8F50
re5dx9.exe+6268E3: 8B 46 4C              - mov eax,[esi+4C]
re5dx9.exe+6268E6: 8B 4E 44              - mov ecx,[esi+44]
re5dx9.exe+6268E9: 03 5C 24 30           - add ebx,[esp+30]
re5dx9.exe+6268ED: 03 C8                 - add ecx,eax
re5dx9.exe+6268EF: E9 0C 97 EA 34        - jmp 358D0000
re5dx9.exe+6268F4: 0F 1F 00              - nop dword ptr [eax]
re5dx9.exe+6268F7: 75 10                 - jne re5dx9.exe+626909
// ---------- INJECTING HERE ----------
re5dx9.exe+6268F9: 8B 86 90 01 00 00     - mov eax,[esi+00000190]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6268FF: EB 03                 - jmp re5dx9.exe+626904
re5dx9.exe+626901: 90                    - nop 
re5dx9.exe+626902: 90                    - nop 
re5dx9.exe+626903: 90                    - nop 
re5dx9.exe+626904: 05 18 09 00 00        - add eax,00000918
re5dx9.exe+626909: 83 BE F8 02 00 00 01  - cmp dword ptr [esi+000002F8],01
re5dx9.exe+626910: 75 0E                 - jne re5dx9.exe+626920
re5dx9.exe+626912: 3D F2 08 00 00        - cmp eax,000008F2
re5dx9.exe+626917: 75 12                 - jne re5dx9.exe+62692B
re5dx9.exe+626919: B8 F3 08 00 00        - mov eax,000008F3
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>28</ID>
      <Description>"Mouse &amp; Keyboard Check Type Byte Changes"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>168</ID>
          <Description>"[00B8A16C] (1) Offset Change"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78A16C)
define(bytes,83 BC 08 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78A16C

re5dx9.exe+78A142: 76 08                    - jna re5dx9.exe+78A14C
re5dx9.exe+78A144: C7 44 24 20 08 00 00 00  - mov [esp+20],00000008
re5dx9.exe+78A14C: 8B 75 08                 - mov esi,[ebp+08]
re5dx9.exe+78A14F: 8B CE                    - mov ecx,esi
re5dx9.exe+78A151: E8 7A 1C FD FF           - call re5dx9.exe+75BDD0
re5dx9.exe+78A156: 84 C0                    - test al,al
re5dx9.exe+78A158: 0F 84 AB 02 00 00        - je re5dx9.exe+78A409
re5dx9.exe+78A15E: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78A163: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78A166: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+78A16C: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
// ---------- DONE INJECTING  ----------
re5dx9.exe+78A174: 0F 84 8F 02 00 00        - je re5dx9.exe+78A409
re5dx9.exe+78A17A: 8B 8E 84 2D 00 00        - mov ecx,[esi+00002D84]
re5dx9.exe+78A180: 8B 15 14 38 1A 01        - mov edx,[re5dx9.exe+DA3814]
re5dx9.exe+78A186: F3 0F 10 8B E4 06 00 00  - movss xmm1,[ebx+000006E4]
re5dx9.exe+78A18E: F3 0F 10 83 E0 06 00 00  - movss xmm0,[ebx+000006E0]
re5dx9.exe+78A196: F3 0F 59 8A 50 04 00 00  - mulss xmm1,[edx+00000450]
re5dx9.exe+78A19E: C1 E9 05                 - shr ecx,05
re5dx9.exe+78A1A1: F6 C1 01                 - test cl,01
re5dx9.exe+78A1A4: F3 0F 11 44 24 3C        - movss [esp+3C],xmm0
re5dx9.exe+78A1AA: F3 0F 11 4C 24 4C        - movss [esp+4C],xmm1
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>169</ID>
          <Description>"[00B8A918] (2) Offset Change"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78A918)
define(bytes,83 BC 08 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78A918

re5dx9.exe+78A8EF: 8B 4C 24 20              - mov ecx,[esp+20]
re5dx9.exe+78A8F3: 85 C9                    - test ecx,ecx
re5dx9.exe+78A8F5: 0F 85 F6 00 00 00        - jne re5dx9.exe+78A9F1
re5dx9.exe+78A8FB: 8B CF                    - mov ecx,edi
re5dx9.exe+78A8FD: E8 CE 14 FD FF           - call re5dx9.exe+75BDD0
re5dx9.exe+78A902: 84 C0                    - test al,al
re5dx9.exe+78A904: 0F 84 31 01 00 00        - je re5dx9.exe+78AA3B
re5dx9.exe+78A90A: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78A90F: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78A912: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+78A918: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
// ---------- DONE INJECTING  ----------
re5dx9.exe+78A920: 0F 84 15 01 00 00        - je re5dx9.exe+78AA3B
re5dx9.exe+78A926: 8B 15 B4 AD 23 01        - mov edx,[re5dx9.exe+E3ADB4]
re5dx9.exe+78A92C: A1 B8 AD 23 01           - mov eax,[re5dx9.exe+E3ADB8]
re5dx9.exe+78A931: 8B 0D 28 AD 23 01        - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+78A937: 6A 00                    - push 00
re5dx9.exe+78A939: 89 54 24 54              - mov [esp+54],edx
re5dx9.exe+78A93D: 89 44 24 58              - mov [esp+58],eax
re5dx9.exe+78A941: E8 7A 3F C1 FF           - call re5dx9.exe+39E8C0
re5dx9.exe+78A946: 84 C0                    - test al,al
re5dx9.exe+78A948: 74 14                    - je re5dx9.exe+78A95E
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>170</ID>
          <Description>"[00B8AB27] (3) Offset Change"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78AB27)
define(bytes,83 BC 08 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78AB27

re5dx9.exe+78AAF7: 0F 84 CE 0A 00 00        - je re5dx9.exe+78B5CB
re5dx9.exe+78AAFD: 80 BB CE 04 00 00 00     - cmp byte ptr [ebx+000004CE],00
re5dx9.exe+78AB04: 0F 84 C1 0A 00 00        - je re5dx9.exe+78B5CB
re5dx9.exe+78AB0A: 8B CF                    - mov ecx,edi
re5dx9.exe+78AB0C: E8 BF 12 FD FF           - call re5dx9.exe+75BDD0
re5dx9.exe+78AB11: 84 C0                    - test al,al
re5dx9.exe+78AB13: 0F 84 76 01 00 00        - je re5dx9.exe+78AC8F
re5dx9.exe+78AB19: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78AB1E: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78AB21: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+78AB27: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
// ---------- DONE INJECTING  ----------
re5dx9.exe+78AB2F: 0F 84 F9 00 00 00        - je re5dx9.exe+78AC2E
re5dx9.exe+78AB35: D9 87 10 2A 00 00        - fld dword ptr [edi+00002A10]
re5dx9.exe+78AB3B: 8D 94 24 80 00 00 00     - lea edx,[esp+00000080]
re5dx9.exe+78AB42: 52                       - push edx
re5dx9.exe+78AB43: D9 5C 24 50              - fstp dword ptr [esp+50]
re5dx9.exe+78AB47: 8B CF                    - mov ecx,edi
re5dx9.exe+78AB49: E8 72 85 91 FF           - call re5dx9.exe+A30C0
re5dx9.exe+78AB4E: D9 40 04                 - fld dword ptr [eax+04]
re5dx9.exe+78AB51: 83 EC 08                 - sub esp,08
re5dx9.exe+78AB54: D9 5C 24 04              - fstp dword ptr [esp+04]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>172</ID>
          <Description>"[00B8BA61] (4) Offset Change"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78BA61)
define(bytes,83 BC 08 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78BA61

re5dx9.exe+78BA35: F3 0F 58 05 7C 46 F5 00  - addss xmm0,[re5dx9.exe+B5467C]
re5dx9.exe+78BA3D: F3 0F 11 83 74 04 00 00  - movss [ebx+00000474],xmm0
re5dx9.exe+78BA45: 8B 75 08                 - mov esi,[ebp+08]
re5dx9.exe+78BA48: 8B CE                    - mov ecx,esi
re5dx9.exe+78BA4A: E8 81 03 FD FF           - call re5dx9.exe+75BDD0
re5dx9.exe+78BA4F: 84 C0                    - test al,al
re5dx9.exe+78BA51: 74 5A                    - je re5dx9.exe+78BAAD
re5dx9.exe+78BA53: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78BA58: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78BA5B: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+78BA61: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
// ---------- DONE INJECTING  ----------
re5dx9.exe+78BA69: 74 42                    - je re5dx9.exe+78BAAD
re5dx9.exe+78BA6B: 8B 15 FC 30 1A 01        - mov edx,[re5dx9.exe+DA30FC]
re5dx9.exe+78BA71: F3 0F 10 42 28           - movss xmm0,[edx+28]
re5dx9.exe+78BA76: F3 0F 59 86 D4 0F 00 00  - mulss xmm0,[esi+00000FD4]
re5dx9.exe+78BA7E: 0F 2F 05 8C 9E 04 01     - comiss xmm0,[re5dx9.exe+C49E8C]
re5dx9.exe+78BA85: 76 26                    - jna re5dx9.exe+78BAAD
re5dx9.exe+78BA87: F3 0F 10 83 EC 06 00 00  - movss xmm0,[ebx+000006EC]
re5dx9.exe+78BA8F: F3 0F 59 44 24 3C        - mulss xmm0,[esp+3C]
re5dx9.exe+78BA95: F3 0F 59 05 88 34 F5 00  - mulss xmm0,[re5dx9.exe+B53488]
re5dx9.exe+78BA9D: F3 0F 58 83 74 04 00 00  - addss xmm0,[ebx+00000474]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>173</ID>
          <Description>"[00B69270] (5) Offset Change"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+769270)
define(bytes,83 BF 94 00 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [edi+00000094],00
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [edi+00000094],00

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+769270

re5dx9.exe+769252: 75 16                          - jne re5dx9.exe+76926A
re5dx9.exe+769254: 50                             - push eax
re5dx9.exe+769255: E8 56 B3 C0 FF                 - call re5dx9.exe+3745B0
re5dx9.exe+76925A: 83 C4 04                       - add esp,04
re5dx9.exe+76925D: 85 C0                          - test eax,eax
re5dx9.exe+76925F: 74 09                          - je re5dx9.exe+76926A
re5dx9.exe+769261: 83 B8 98 00 00 00 00           - cmp dword ptr [eax+00000098],00
re5dx9.exe+769268: 75 16                          - jne re5dx9.exe+769280
re5dx9.exe+76926A: 80 7F 6F 02                    - cmp byte ptr [edi+6F],02
re5dx9.exe+76926E: 75 10                          - jne re5dx9.exe+769280
// ---------- INJECTING HERE ----------
re5dx9.exe+769270: 83 BF 94 00 00 00 00           - cmp dword ptr [edi+00000094],00
// ---------- DONE INJECTING  ----------
re5dx9.exe+769277: 75 07                          - jne re5dx9.exe+769280
re5dx9.exe+769279: B3 01                          - mov bl,01
re5dx9.exe+76927B: C6 44 24 0C 02                 - mov byte ptr [esp+0C],02
re5dx9.exe+769280: 8B 86 8C 2D 00 00              - mov eax,[esi+00002D8C]
re5dx9.exe+769286: C1 E8 07                       - shr eax,07
re5dx9.exe+769289: A8 01                          - test al,01
re5dx9.exe+76928B: 74 4B                          - je re5dx9.exe+7692D8
re5dx9.exe+76928D: 81 BF D8 73 02 00 CD 00 00 00  - cmp [edi+000273D8],000000CD
re5dx9.exe+769297: 75 07                          - jne re5dx9.exe+7692A0
re5dx9.exe+769299: C6 44 24 0C 00                 - mov byte ptr [esp+0C],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>174</ID>
          <Description>"[00B73CE8] (6) Offset Change"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+773CE8)
define(bytes,83 BC 08 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+773CE8

re5dx9.exe+773CB3: F3 0F 10 40 3C              - movss xmm0,[eax+3C]
re5dx9.exe+773CB8: F3 0F 11 84 24 8C 00 00 00  - movss [esp+0000008C],xmm0
re5dx9.exe+773CC1: 0F 85 09 06 00 00           - jne re5dx9.exe+7742D0
re5dx9.exe+773CC7: 8B 0D 28 AD 23 01           - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+773CCD: E8 AE A2 C2 FF              - call re5dx9.exe+39DF80
re5dx9.exe+773CD2: 84 C0                       - test al,al
re5dx9.exe+773CD4: 0F 85 F6 05 00 00           - jne re5dx9.exe+7742D0
re5dx9.exe+773CDA: E9 51 08 C3 6E              - jmp QOL.dll+4530
re5dx9.exe+773CDF: 8B 48 20                    - mov ecx,[eax+20]
re5dx9.exe+773CE2: 69 C9 74 8C 00 00           - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+773CE8: 83 BC 08 94 00 00 00 01     - cmp dword ptr [eax+ecx+00000094],01
// ---------- DONE INJECTING  ----------
re5dx9.exe+773CF0: 0F 84 DA 05 00 00           - je re5dx9.exe+7742D0
re5dx9.exe+773CF6: 8D 94 24 F0 00 00 00        - lea edx,[esp+000000F0]
re5dx9.exe+773CFD: 52                          - push edx
re5dx9.exe+773CFE: 8B CE                       - mov ecx,esi
re5dx9.exe+773D00: E8 BB F3 92 FF              - call re5dx9.exe+A30C0
re5dx9.exe+773D05: 0F B6 8E 16 2A 00 00        - movzx ecx,byte ptr [esi+00002A16]
re5dx9.exe+773D0C: 33 C0                       - xor eax,eax
re5dx9.exe+773D0E: 39 46 18                    - cmp [esi+18],eax
re5dx9.exe+773D11: 0F 95 C0                    - setne al
re5dx9.exe+773D14: 3B C8                       - cmp ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>50</ID>
          <Description>"[00846425] (7) Offset Change"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+446425)
define(bytes,83 BC 01 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [ecx+eax+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [ecx+eax+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+446425

re5dx9.exe+4463FE: 8B F8                    - mov edi,eax
re5dx9.exe+446400: 85 FF                    - test edi,edi
re5dx9.exe+446402: 0F 84 A4 00 00 00        - je re5dx9.exe+4464AC
re5dx9.exe+446408: 8B 0D 28 AD 23 01        - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+44640E: E8 6D 7B F5 FF           - call re5dx9.exe+39DF80
re5dx9.exe+446413: 84 C0                    - test al,al
re5dx9.exe+446415: 75 2A                    - jne re5dx9.exe+446441
re5dx9.exe+446417: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+44641C: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+44641F: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+446425: 83 BC 01 94 00 00 00 01  - cmp dword ptr [ecx+eax+00000094],01
// ---------- DONE INJECTING  ----------
re5dx9.exe+44642D: 75 36                    - jne re5dx9.exe+446465
re5dx9.exe+44642F: F3 0F 10 05 84 5A F6 00  - movss xmm0,[re5dx9.exe+B65A84]
re5dx9.exe+446437: F3 0F 11 86 7C 14 00 00  - movss [esi+0000147C],xmm0
re5dx9.exe+44643F: EB 6B                    - jmp re5dx9.exe+4464AC
re5dx9.exe+446441: 0F B6 97 9C 2D 00 00     - movzx edx,byte ptr [edi+00002D9C]
re5dx9.exe+446448: A1 6C 98 23 01           - mov eax,[re5dx9.exe+E3986C]
re5dx9.exe+44644D: 8B 88 2C 04 01 00        - mov ecx,[eax+0001042C]
re5dx9.exe+446453: 52                       - push edx
re5dx9.exe+446454: E8 F7 B5 3F 00           - call re5dx9.exe+841A50
re5dx9.exe+446459: 83 F8 03                 - cmp eax,03
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>39</ID>
          <Description>"[00B86F20] (8) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+786F20)
define(bytes,8B 84 01 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000094]
  jmp 00B86F27

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+786F20

re5dx9.exe+786EF8: 0F 57 C0              - xorps xmm0,xmm0
re5dx9.exe+786EFB: F3 0F 11 44 24 14     - movss [esp+14],xmm0
re5dx9.exe+786F01: F3 0F 11 44 24 10     - movss [esp+10],xmm0
re5dx9.exe+786F07: 8B CF                 - mov ecx,edi
re5dx9.exe+786F09: E8 C2 4E FD FF        - call re5dx9.exe+75BDD0
re5dx9.exe+786F0E: 84 C0                 - test al,al
re5dx9.exe+786F10: 74 4D                 - je re5dx9.exe+786F5F
re5dx9.exe+786F12: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+786F17: 8B 48 20              - mov ecx,[eax+20]
re5dx9.exe+786F1A: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+786F20: 8B 84 01 94 00 00 00  - mov eax,[ecx+eax+00000094]
// ---------- DONE INJECTING  ----------
re5dx9.exe+786F27: 83 E8 01              - sub eax,01
re5dx9.exe+786F2A: 75 33                 - jne re5dx9.exe+786F5F
re5dx9.exe+786F2C: 85 DB                 - test ebx,ebx
re5dx9.exe+786F2E: C6 44 24 0E 01        - mov byte ptr [esp+0E],01
re5dx9.exe+786F33: 0F 84 15 01 00 00     - je re5dx9.exe+78704E
re5dx9.exe+786F39: 8B 53 04              - mov edx,[ebx+04]
re5dx9.exe+786F3C: 52                    - push edx
re5dx9.exe+786F3D: E8 6E D6 BE FF        - call re5dx9.exe+3745B0
re5dx9.exe+786F42: 83 C4 04              - add esp,04
re5dx9.exe+786F45: 85 C0                 - test eax,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>48</ID>
          <Description>"[00B74964] (9) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+774964)
define(bytes,8B 84 01 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000094]
  jmp 00B7496B

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+774964

re5dx9.exe+77493E: E9 2D FC 4D 73        - jmp QOL.dll+4570
re5dx9.exe+774943: 90                    - nop 
re5dx9.exe+774944: 90                    - nop 
re5dx9.exe+774945: 90                    - nop 
re5dx9.exe+774946: 38 5C 24 37           - cmp [esp+37],bl
re5dx9.exe+77494A: 8B BE 64 2D 00 00     - mov edi,[esi+00002D64]
re5dx9.exe+774950: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+774955: 0F 84 8A 01 00 00     - je re5dx9.exe+774AE5
re5dx9.exe+77495B: 8B 48 20              - mov ecx,[eax+20]
re5dx9.exe+77495E: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+774964: 8B 84 01 94 00 00 00  - mov eax,[ecx+eax+00000094]
// ---------- DONE INJECTING  ----------
re5dx9.exe+77496B: 83 E8 00              - sub eax,00
re5dx9.exe+77496E: 74 15                 - je re5dx9.exe+774985
re5dx9.exe+774970: 83 E8 01              - sub eax,01
re5dx9.exe+774973: 75 17                 - jne re5dx9.exe+77498C
re5dx9.exe+774975: 38 86 46 2A 00 00     - cmp [esi+00002A46],al
re5dx9.exe+77497B: 74 0F                 - je re5dx9.exe+77498C
re5dx9.exe+77497D: 88 86 1C 29 00 00     - mov [esi+0000291C],al
re5dx9.exe+774983: EB 07                 - jmp re5dx9.exe+77498C
re5dx9.exe+774985: C6 86 1F 29 00 00 00  - mov byte ptr [esi+0000291F],00
re5dx9.exe+77498C: 80 BE 45 2A 00 00 00  - cmp byte ptr [esi+00002A45],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>49</ID>
          <Description>"[00B7634D] (10) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+77634D)
define(bytes,8B 84 02 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[edx+eax+00000094]
  jmp 00B76354

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[edx+eax+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+77634D

re5dx9.exe+77631B: 83 BE A8 2D 00 00 00  - cmp dword ptr [esi+00002DA8],00
re5dx9.exe+776322: 89 44 24 14           - mov [esp+14],eax
re5dx9.exe+776326: 0F 85 73 01 00 00     - jne re5dx9.exe+77649F
re5dx9.exe+77632C: 8B 0D 28 AD 23 01     - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+776332: E8 49 7C C2 FF        - call re5dx9.exe+39DF80
re5dx9.exe+776337: 84 C0                 - test al,al
re5dx9.exe+776339: 0F 85 60 01 00 00     - jne re5dx9.exe+77649F
re5dx9.exe+77633F: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+776344: 8B 50 20              - mov edx,[eax+20]
re5dx9.exe+776347: 69 D2 74 8C 00 00     - imul edx,edx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+77634D: 8B 84 02 94 00 00 00  - mov eax,[edx+eax+00000094]
// ---------- DONE INJECTING  ----------
re5dx9.exe+776354: 83 E8 00              - sub eax,00
re5dx9.exe+776357: 0F 84 0B 01 00 00     - je re5dx9.exe+776468
re5dx9.exe+77635D: 83 E8 01              - sub eax,01
re5dx9.exe+776360: 0F 85 39 01 00 00     - jne re5dx9.exe+77649F
re5dx9.exe+776366: 8B 43 04              - mov eax,[ebx+04]
re5dx9.exe+776369: 50                    - push eax
re5dx9.exe+77636A: E8 41 E2 BF FF        - call re5dx9.exe+3745B0
re5dx9.exe+77636F: 83 C4 04              - add esp,04
re5dx9.exe+776372: 85 C0                 - test eax,eax
re5dx9.exe+776374: B3 01                 - mov bl,01
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>51</ID>
          <Description>"[00B74AEE] (11) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+774AEE)
define(bytes,8B 84 02 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[edx+eax+00000094]
  jmp 00B74AF5

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[edx+eax+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+774AEE

re5dx9.exe+774ABC: F3 0F 5C C1              - subss xmm0,xmm1
re5dx9.exe+774AC0: F3 0F 11 86 94 29 00 00  - movss [esi+00002994],xmm0
re5dx9.exe+774AC8: 8B 0D 14 38 1A 01        - mov ecx,[re5dx9.exe+DA3814]
re5dx9.exe+774ACE: F3 0F 10 89 60 04 00 00  - movss xmm1,[ecx+00000460]
re5dx9.exe+774AD6: 0F 2F C8                 - comiss xmm1,xmm0
re5dx9.exe+774AD9: 76 41                    - jna re5dx9.exe+774B1C
re5dx9.exe+774ADB: F3 0F 11 8E 94 29 00 00  - movss [esi+00002994],xmm1
re5dx9.exe+774AE3: EB 37                    - jmp re5dx9.exe+774B1C
re5dx9.exe+774AE5: 8B 50 20                 - mov edx,[eax+20]
re5dx9.exe+774AE8: 69 D2 74 8C 00 00        - imul edx,edx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+774AEE: 8B 84 02 94 00 00 00     - mov eax,[edx+eax+00000094]
// ---------- DONE INJECTING  ----------
re5dx9.exe+774AF5: 83 E8 00                 - sub eax,00
re5dx9.exe+774AF8: 0F 84 21 03 00 00        - je re5dx9.exe+774E1F
re5dx9.exe+774AFE: 83 E8 01                 - sub eax,01
re5dx9.exe+774B01: 75 07                    - jne re5dx9.exe+774B0A
re5dx9.exe+774B03: C6 86 1F 29 00 00 01     - mov byte ptr [esi+0000291F],01
re5dx9.exe+774B0A: 8B 15 14 38 1A 01        - mov edx,[re5dx9.exe+DA3814]
re5dx9.exe+774B10: D9 82 5C 04 00 00        - fld dword ptr [edx+0000045C]
re5dx9.exe+774B16: D9 9E 94 29 00 00        - fstp dword ptr [esi+00002994]
re5dx9.exe+774B1C: 8B BE A8 11 00 00        - mov edi,[esi+000011A8]
re5dx9.exe+774B22: 88 9E 45 2A 00 00        - mov [esi+00002A45],bl
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>53</ID>
          <Description>"[00B845F8] (12) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+7845F8)
define(bytes,8B 84 01 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[ecx+eax+00000094]
  jmp 00B845FF

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+7845F8

re5dx9.exe+7845D2: 8B CF                    - mov ecx,edi
re5dx9.exe+7845D4: E8 F7 21 C6 FF           - call re5dx9.exe+3E67D0
re5dx9.exe+7845D9: 8B F8                    - mov edi,eax
re5dx9.exe+7845DB: 85 FF                    - test edi,edi
re5dx9.exe+7845DD: 74 0B                    - je re5dx9.exe+7845EA
re5dx9.exe+7845DF: 8B 44 24 1C              - mov eax,[esp+1C]
re5dx9.exe+7845E3: C6 80 0E 07 00 00 01     - mov byte ptr [eax+0000070E],01
re5dx9.exe+7845EA: E9 61 FF 4C 73           - jmp QOL.dll+4550
re5dx9.exe+7845EF: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+7845F2: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+7845F8: 8B 84 01 94 00 00 00     - mov eax,[ecx+eax+00000094]
// ---------- DONE INJECTING  ----------
re5dx9.exe+7845FF: 83 E8 00                 - sub eax,00
re5dx9.exe+784602: 0F 84 DA 01 00 00        - je re5dx9.exe+7847E2
re5dx9.exe+784608: 83 E8 01                 - sub eax,01
re5dx9.exe+78460B: 0F 85 A0 07 00 00        - jne re5dx9.exe+784DB1
re5dx9.exe+784611: 6A 03                    - push 03
re5dx9.exe+784613: 8B CE                    - mov ecx,esi
re5dx9.exe+784615: E8 E6 55 A1 FF           - call re5dx9.exe+199C00
re5dx9.exe+78461A: F3 0F 10 80 80 00 00 00  - movss xmm0,[eax+00000080]
re5dx9.exe+784622: 05 80 00 00 00           - add eax,00000080
re5dx9.exe+784627: F3 0F 11 44 24 30        - movss [esp+30],xmm0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>215</ID>
          <Description>"[00B89AC6] (13) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+789AC6)
define(bytes,E9 91 A9 51 74)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [eax+ecx+00000094],01
  je 00B89B10
  jmp 00B89B0B


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+445C

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+789AC6

re5dx9.exe+789A9D: 8D 8B E8 04 00 00     - lea ecx,[ebx+000004E8]
re5dx9.exe+789AA3: E8 28 25 0E 00        - call re5dx9.exe+86BFD0
re5dx9.exe+789AA8: 8B CF                 - mov ecx,edi
re5dx9.exe+789AAA: C6 44 24 1B 00        - mov byte ptr [esp+1B],00
re5dx9.exe+789AAF: E8 1C 23 FD FF        - call re5dx9.exe+75BDD0
re5dx9.exe+789AB4: 84 C0                 - test al,al
re5dx9.exe+789AB6: 74 18                 - je re5dx9.exe+789AD0
re5dx9.exe+789AB8: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+789ABD: 8B 48 20              - mov ecx,[eax+20]
re5dx9.exe+789AC0: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+789AC6: E9 91 A9 51 74        - jmp QOL.dll+445C
// ---------- DONE INJECTING  ----------
re5dx9.exe+789ACB: 90                    - nop 
re5dx9.exe+789ACC: 90                    - nop 
re5dx9.exe+789ACD: 90                    - nop 
re5dx9.exe+789ACE: EB 39                 - jmp re5dx9.exe+789B09
re5dx9.exe+789AD0: 0F B6 97 9C 2D 00 00  - movzx edx,byte ptr [edi+00002D9C]
re5dx9.exe+789AD7: A1 6C 98 23 01        - mov eax,[re5dx9.exe+E3986C]
re5dx9.exe+789ADC: 8B 88 2C 04 01 00     - mov ecx,[eax+0001042C]
re5dx9.exe+789AE2: 52                    - push edx
re5dx9.exe+789AE3: E8 68 7F 0B 00        - call re5dx9.exe+841A50
re5dx9.exe+789AE8: 83 F8 02              - cmp eax,02
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>219</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+445C)
define(bytes,83 BC 08 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+445C

QOL.dll+442C: E8 9F 79 DA 92           - call re5dx9.exe+75BDD0
QOL.dll+4431: 84 C0                    - test al,al
QOL.dll+4433: 0F 84 27 2E DD 92        - je re5dx9.exe+787260
QOL.dll+4439: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+443E: 8B 48 20                 - mov ecx,[eax+20]
QOL.dll+4441: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
QOL.dll+4447: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
QOL.dll+444E: 83 F8 02                 - cmp eax,02
QOL.dll+4451: 0F 85 C5 2D DD 92        - jne re5dx9.exe+78721C
QOL.dll+4457: E9 04 2E DD 92           - jmp re5dx9.exe+787260
// ---------- INJECTING HERE ----------
QOL.dll+445C: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
// ---------- DONE INJECTING  ----------
QOL.dll+4464: 0F 84 A6 56 DD 92        - je re5dx9.exe+789B10
QOL.dll+446A: E9 9C 56 DD 92           - jmp re5dx9.exe+789B0B
QOL.dll+446F: 00 A1 B8 31 1A 01        - add [ecx+re5dx9.exe+DA31B8],ah
QOL.dll+4475: 8B 48 20                 - mov ecx,[eax+20]
QOL.dll+4478: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
QOL.dll+447E: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
QOL.dll+4485: 83 F8 02                 - cmp eax,02
QOL.dll+4488: 0F 94 C3                 - sete bl
QOL.dll+448B: 88 9E 20 29 00 00        - mov [esi+00002920],bl
QOL.dll+4491: 31 DB                    - xor ebx,ebx
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>202</ID>
          <Description>"[00B89D58] (14) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+789D58)
define(bytes,E9 9B A5 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movss xmm1,[0123ADE4]
  movss xmm2,[0123ADE8]
  movss [esp+50],xmm0
  movss [esp+54],xmm1
  movss [esp+58],xmm2
  cmp byte ptr [eax+ecx+00000094],01
  je 00B89DCE
  cmp byte ptr [eax+ecx+00000094],03
  je 00B89DCE
  jmp 00B89D84


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+42F8

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+789D58

re5dx9.exe+789D26: 83 C4 18                 - add esp,18
re5dx9.exe+789D29: F3 0F 10 4C 24 30        - movss xmm1,[esp+30]
re5dx9.exe+789D2F: F3 0F 10 05 7C 46 F5 00  - movss xmm0,[re5dx9.exe+B5467C]
re5dx9.exe+789D37: 0F 2F C8                 - comiss xmm1,xmm0
re5dx9.exe+789D3A: 76 06                    - jna re5dx9.exe+789D42
re5dx9.exe+789D3C: F3 0F 11 44 24 30        - movss [esp+30],xmm0
re5dx9.exe+789D42: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+789D47: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+789D4A: F3 0F 10 05 E0 AD 23 01  - movss xmm0,[re5dx9.exe+E3ADE0]
re5dx9.exe+789D52: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+789D58: E9 9B A5 04 69           - jmp QOL.dll+42F8
// ---------- DONE INJECTING  ----------
re5dx9.exe+789D5D: 90                       - nop 
re5dx9.exe+789D5E: 90                       - nop 
re5dx9.exe+789D5F: 90                       - nop 
re5dx9.exe+789D60: F3 0F 10 0D E4 AD 23 01  - movss xmm1,[re5dx9.exe+E3ADE4]
re5dx9.exe+789D68: F3 0F 10 15 E8 AD 23 01  - movss xmm2,[re5dx9.exe+E3ADE8]
re5dx9.exe+789D70: F3 0F 11 44 24 50        - movss [esp+50],xmm0
re5dx9.exe+789D76: F3 0F 11 4C 24 54        - movss [esp+54],xmm1
re5dx9.exe+789D7C: F3 0F 11 54 24 58        - movss [esp+58],xmm2
re5dx9.exe+789D82: 75 4A                    - jne re5dx9.exe+789DCE
re5dx9.exe+789D84: 8B 0D 28 AD 23 01        - mov ecx,[re5dx9.exe+E3AD28]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>220</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+431A)
define(bytes,83 BC 08 94 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+431A

QOL.dll+42DD: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
QOL.dll+42E3: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
QOL.dll+42EA: 83 F8 02                 - cmp eax,02
QOL.dll+42ED: 0F 85 C2 0A DD 92        - jne re5dx9.exe+784DB5
QOL.dll+42F3: E9 83 0A DD 92           - jmp re5dx9.exe+784D7B
QOL.dll+42F8: F3 0F 10 0D E4 AD 23 01  - movss xmm1,[re5dx9.exe+E3ADE4]
QOL.dll+4300: F3 0F 10 15 E8 AD 23 01  - movss xmm2,[re5dx9.exe+E3ADE8]
QOL.dll+4308: F3 0F 11 44 24 50        - movss [esp+50],xmm0
QOL.dll+430E: F3 0F 11 4C 24 54        - movss [esp+54],xmm1
QOL.dll+4314: F3 0F 11 54 24 58        - movss [esp+58],xmm2
// ---------- INJECTING HERE ----------
QOL.dll+431A: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
// ---------- DONE INJECTING  ----------
QOL.dll+4322: 0F 84 A6 5A DD 92        - je re5dx9.exe+789DCE
QOL.dll+4328: 83 BC 08 94 00 00 00 03  - cmp dword ptr [eax+ecx+00000094],03
QOL.dll+4330: 0F 84 98 5A DD 92        - je re5dx9.exe+789DCE
QOL.dll+4336: E9 49 5A DD 92           - jmp re5dx9.exe+789D84
QOL.dll+433B: 00 E8                    - add al,ch
QOL.dll+433D: 8F                       - db 8f
QOL.dll+433E: 7A DA                    - jp QOL.dll+431A
QOL.dll+4340: 92                       - xchg eax,edx
QOL.dll+4341: 84 C0                    - test al,al
QOL.dll+4343: 0F 84 7B 34 DD 92        - je re5dx9.exe+7877C4
}
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>221</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+4328)
define(bytes,83 BC 08 94 00 00 00 03)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [eax+ecx+00000094],03
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [eax+ecx+00000094],03

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+4328

QOL.dll+42EA: 83 F8 02                 - cmp eax,02
QOL.dll+42ED: 0F 85 C2 0A DD 92        - jne re5dx9.exe+784DB5
QOL.dll+42F3: E9 83 0A DD 92           - jmp re5dx9.exe+784D7B
QOL.dll+42F8: F3 0F 10 0D E4 AD 23 01  - movss xmm1,[re5dx9.exe+E3ADE4]
QOL.dll+4300: F3 0F 10 15 E8 AD 23 01  - movss xmm2,[re5dx9.exe+E3ADE8]
QOL.dll+4308: F3 0F 11 44 24 50        - movss [esp+50],xmm0
QOL.dll+430E: F3 0F 11 4C 24 54        - movss [esp+54],xmm1
QOL.dll+4314: F3 0F 11 54 24 58        - movss [esp+58],xmm2
QOL.dll+431A: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
QOL.dll+4322: 0F 84 A6 5A DD 92        - je re5dx9.exe+789DCE
// ---------- INJECTING HERE ----------
QOL.dll+4328: 83 BC 08 94 00 00 00 03  - cmp dword ptr [eax+ecx+00000094],03
// ---------- DONE INJECTING  ----------
QOL.dll+4330: 0F 84 98 5A DD 92        - je re5dx9.exe+789DCE
QOL.dll+4336: E9 49 5A DD 92           - jmp re5dx9.exe+789D84
QOL.dll+433B: 00 E8                    - add al,ch
QOL.dll+433D: 8F                       - db 8f
QOL.dll+433E: 7A DA                    - jp QOL.dll+431A
QOL.dll+4340: 92                       - xchg eax,edx
QOL.dll+4341: 84 C0                    - test al,al
QOL.dll+4343: 0F 84 7B 34 DD 92        - je re5dx9.exe+7877C4
QOL.dll+4349: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+434E: 8B 48 20                 - mov ecx,[eax+20]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>203</ID>
          <Description>"[00B85363] (15) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+785363)
define(bytes,E9 8C F2 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov esi,[ebp+08]
  mov eax,[esi+00001040]
  cmp byte ptr [eax+000030FC],00
  jne 00B85385
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,01
  jne 00B85A76
  xor eax,eax
  jmp 00B85385


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+45F4

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+785363

re5dx9.exe+78534F: CC                    - int 3 
re5dx9.exe+785350: 55                    - push ebp
re5dx9.exe+785351: 8B EC                 - mov ebp,esp
re5dx9.exe+785353: 83 E4 F0              - and esp,-10
re5dx9.exe+785356: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78535B: 83 EC 64              - sub esp,64
re5dx9.exe+78535E: 53                    - push ebx
re5dx9.exe+78535F: 56                    - push esi
re5dx9.exe+785360: 57                    - push edi
re5dx9.exe+785361: 8B F9                 - mov edi,ecx
// ---------- INJECTING HERE ----------
re5dx9.exe+785363: E9 8C F2 04 69        - jmp QOL.dll+45F4
// ---------- DONE INJECTING  ----------
re5dx9.exe+785368: 90                    - nop 
re5dx9.exe+785369: 90                    - nop 
re5dx9.exe+78536A: 90                    - nop 
re5dx9.exe+78536B: 90                    - nop 
re5dx9.exe+78536C: 8B 84 01 94 00 00 00  - mov eax,[ecx+eax+00000094]
re5dx9.exe+785373: 83 E8 00              - sub eax,00
re5dx9.exe+785376: 0F 84 FA 06 00 00     - je re5dx9.exe+785A76
re5dx9.exe+78537C: 83 E8 01              - sub eax,01
re5dx9.exe+78537F: 0F 85 F0 0D 00 00     - jne re5dx9.exe+786175
re5dx9.exe+785385: 8B 75 08              - mov esi,[ebp+08]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>226</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+4618)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+4618

QOL.dll+45EE: E9 BF 14 DD 92        - jmp re5dx9.exe+785AB2
QOL.dll+45F3: 00 8B 75 08 8B 86     - add [ebx-7974F78B],cl
QOL.dll+45F9: 40                    - inc eax
QOL.dll+45FA: 10 00                 - adc [eax],al
QOL.dll+45FC: 00 80 B8 FC 30 00     - add [eax+0030FCB8],al
QOL.dll+4602: 00 00                 - add [eax],al
QOL.dll+4604: 0F 85 7B 0D DD 92     - jne re5dx9.exe+785385
QOL.dll+460A: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+460F: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4612: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+4618: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+461F: 83 F8 01              - cmp eax,01
QOL.dll+4622: 0F 85 4E 14 DD 92     - jne re5dx9.exe+785A76
QOL.dll+4628: 31 C0                 - xor eax,eax
QOL.dll+462A: E9 56 0D DD 92        - jmp re5dx9.exe+785385
QOL.dll+462F: 00 01                 - add [ecx],al
QOL.dll+4631: 00 00                 - add [eax],al
QOL.dll+4633: 00 00                 - add [eax],al
QOL.dll+4635: 00 00                 - add [eax],al
QOL.dll+4637: 00 00                 - add [eax],al
QOL.dll+4639: 00 00                 - add [eax],al
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>204</ID>
          <Description>"[00B85AA9] (16) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+785AA9)
define(bytes,E9 02 EB 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[esi+00001040]
  cmp byte ptr [ecx+000030FC],00
  jne 00B85AB2
  cmp dword ptr [eax+00000098],00
  jne 00B85AB2
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B85AB4
  jmp 00B85AB2


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+45B0

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+785AA9

re5dx9.exe+785A8E: 32 DB              - xor bl,bl
re5dx9.exe+785A90: E8 6B 4C 0C 00     - call re5dx9.exe+84A700
re5dx9.exe+785A95: 85 C0              - test eax,eax
re5dx9.exe+785A97: 74 1B              - je re5dx9.exe+785AB4
re5dx9.exe+785A99: 8B 48 04           - mov ecx,[eax+04]
re5dx9.exe+785A9C: 51                 - push ecx
re5dx9.exe+785A9D: E8 0E EB BE FF     - call re5dx9.exe+3745B0
re5dx9.exe+785AA2: 83 C4 04           - add esp,04
re5dx9.exe+785AA5: 85 C0              - test eax,eax
re5dx9.exe+785AA7: 74 0B              - je re5dx9.exe+785AB4
// ---------- INJECTING HERE ----------
re5dx9.exe+785AA9: E9 02 EB 04 69     - jmp QOL.dll+45B0
// ---------- DONE INJECTING  ----------
re5dx9.exe+785AAE: 90                 - nop 
re5dx9.exe+785AAF: 90                 - nop 
re5dx9.exe+785AB0: 74 02              - je re5dx9.exe+785AB4
re5dx9.exe+785AB2: B3 01              - mov bl,01
re5dx9.exe+785AB4: 8B 86 8C 2D 00 00  - mov eax,[esi+00002D8C]
re5dx9.exe+785ABA: 8B D0              - mov edx,eax
re5dx9.exe+785ABC: C1 EA 06           - shr edx,06
re5dx9.exe+785ABF: F6 C2 01           - test dl,01
re5dx9.exe+785AC2: 74 02              - je re5dx9.exe+785AC6
re5dx9.exe+785AC4: B3 01              - mov bl,01
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>223</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+45DE)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+45DE

QOL.dll+45A9: E9 5C 05 DC 92        - jmp re5dx9.exe+774B0A
QOL.dll+45AE: 00 00                 - add [eax],al
QOL.dll+45B0: 8B 8E 40 10 00 00     - mov ecx,[esi+00001040]
QOL.dll+45B6: 80 B9 FC 30 00 00 00  - cmp byte ptr [ecx+000030FC],00
QOL.dll+45BD: 0F 85 EF 14 DD 92     - jne re5dx9.exe+785AB2
QOL.dll+45C3: 83 B8 98 00 00 00 00  - cmp dword ptr [eax+00000098],00
QOL.dll+45CA: 0F 85 E2 14 DD 92     - jne re5dx9.exe+785AB2
QOL.dll+45D0: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+45D5: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+45D8: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+45DE: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+45E5: 83 F8 02              - cmp eax,02
QOL.dll+45E8: 0F 85 C6 14 DD 92     - jne re5dx9.exe+785AB4
QOL.dll+45EE: E9 BF 14 DD 92        - jmp re5dx9.exe+785AB2
QOL.dll+45F3: 00 8B 75 08 8B 86     - add [ebx-7974F78B],cl
QOL.dll+45F9: 40                    - inc eax
QOL.dll+45FA: 10 00                 - adc [eax],al
QOL.dll+45FC: 00 80 B8 FC 30 00     - add [eax+0030FCB8],al
QOL.dll+4602: 00 00                 - add [eax],al
QOL.dll+4604: 0F 85 7B 0D DD 92     - jne re5dx9.exe+785385
QOL.dll+460A: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>205</ID>
          <Description>"[00B8664B] (17) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78664B)
define(bytes,E9 7C DD 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  call 00B5BDD0
  test al,al
  je 00B86659
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B86654
  jmp 00B86659


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+43CC

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78664B

re5dx9.exe+786617: F3 0F 10 05 34 E6 0B 01  - movss xmm0,[re5dx9.exe+CBE634]
re5dx9.exe+78661F: F3 0F 58 CA              - addss xmm1,xmm2
re5dx9.exe+786623: 8B CF                    - mov ecx,edi
re5dx9.exe+786625: 89 5C 24 18              - mov [esp+18],ebx
re5dx9.exe+786629: F3 0F 11 4C 24 44        - movss [esp+44],xmm1
re5dx9.exe+78662F: F3 0F 11 54 24 14        - movss [esp+14],xmm2
re5dx9.exe+786635: F3 0F 11 54 24 28        - movss [esp+28],xmm2
re5dx9.exe+78663B: F3 0F 11 44 24 2C        - movss [esp+2C],xmm0
re5dx9.exe+786641: C6 44 24 0E 00           - mov byte ptr [esp+0E],00
re5dx9.exe+786646: C6 44 24 0F 01           - mov byte ptr [esp+0F],01
// ---------- INJECTING HERE ----------
re5dx9.exe+78664B: E9 7C DD 04 69           - jmp QOL.dll+43CC
// ---------- DONE INJECTING  ----------
re5dx9.exe+786650: 84 C0                    - test al,al
re5dx9.exe+786652: 74 05                    - je re5dx9.exe+786659
re5dx9.exe+786654: C6 44 24 0F 00           - mov byte ptr [esp+0F],00
re5dx9.exe+786659: 85 DB                    - test ebx,ebx
re5dx9.exe+78665B: 0F 84 BA 01 00 00        - je re5dx9.exe+78681B
re5dx9.exe+786661: 8B 53 04                 - mov edx,[ebx+04]
re5dx9.exe+786664: 81 E2 00 FF 00 00        - and edx,0000FF00
re5dx9.exe+78666A: 81 FA 00 01 00 00        - cmp edx,00000100
re5dx9.exe+786670: 0F 85 5F 01 00 00        - jne re5dx9.exe+7867D5
re5dx9.exe+786676: 8B 44 24 18              - mov eax,[esp+18]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>224</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+43E7)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+43E7

QOL.dll+43B7: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
QOL.dll+43BE: 83 F8 02              - cmp eax,02
QOL.dll+43C1: 0F 85 7B 32 DD 92     - jne re5dx9.exe+787642
QOL.dll+43C7: E9 8C 32 DD 92        - jmp re5dx9.exe+787658
QOL.dll+43CC: E8 FF 79 DA 92        - call re5dx9.exe+75BDD0
QOL.dll+43D1: 84 C0                 - test al,al
QOL.dll+43D3: 0F 84 80 22 DD 92     - je re5dx9.exe+786659
QOL.dll+43D9: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+43DE: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+43E1: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+43E7: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+43EE: 83 F8 02              - cmp eax,02
QOL.dll+43F1: 0F 85 5D 22 DD 92     - jne re5dx9.exe+786654
QOL.dll+43F7: E9 5D 22 DD 92        - jmp re5dx9.exe+786659
QOL.dll+43FC: E8 CF 79 DA 92        - call re5dx9.exe+75BDD0
QOL.dll+4401: 84 C0                 - test al,al
QOL.dll+4403: 0F 84 D4 33 DD 92     - je re5dx9.exe+7877DD
QOL.dll+4409: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+440E: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4411: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
QOL.dll+4417: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>206</ID>
          <Description>"[00B87213] (18) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+787213)
define(bytes,E9 14 D2 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  call 00B5BDD0
  test al,al
  je 00B87260
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B8721C
  jmp 00B87260


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+442C

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+787213

re5dx9.exe+7871E2: F3 0F 11 54 24 44        - movss [esp+44],xmm2
re5dx9.exe+7871E8: 0F 28 D1                 - movaps xmm2,xmm1
re5dx9.exe+7871EB: F3 0F 5C D0              - subss xmm2,xmm0
re5dx9.exe+7871EF: F3 0F 5C C8              - subss xmm1,xmm0
re5dx9.exe+7871F3: 8B CF                    - mov ecx,edi
re5dx9.exe+7871F5: F3 0F 11 44 24 24        - movss [esp+24],xmm0
re5dx9.exe+7871FB: F3 0F 11 54 24 14        - movss [esp+14],xmm2
re5dx9.exe+787201: F3 0F 11 44 24 10        - movss [esp+10],xmm0
re5dx9.exe+787207: F3 0F 11 4C 24 2C        - movss [esp+2C],xmm1
re5dx9.exe+78720D: F3 0F 11 5C 24 30        - movss [esp+30],xmm3
// ---------- INJECTING HERE ----------
re5dx9.exe+787213: E9 14 D2 04 69           - jmp QOL.dll+442C
// ---------- DONE INJECTING  ----------
re5dx9.exe+787218: 84 C0                    - test al,al
re5dx9.exe+78721A: 74 44                    - je re5dx9.exe+787260
re5dx9.exe+78721C: E9 CF D2 04 69           - jmp QOL.dll+44F0
re5dx9.exe+787221: 90                       - nop 
re5dx9.exe+787222: 90                       - nop 
re5dx9.exe+787223: 8B 15 14 38 1A 01        - mov edx,[re5dx9.exe+DA3814]
re5dx9.exe+787229: F3 0F 10 82 58 04 00 00  - movss xmm0,[edx+00000458]
re5dx9.exe+787231: 0F 57 C9                 - xorps xmm1,xmm1
re5dx9.exe+787234: F3 0F 11 44 24 30        - movss [esp+30],xmm0
re5dx9.exe+78723A: F3 0F 10 05 B4 E6 0B 01  - movss xmm0,[re5dx9.exe+CBE6B4]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>225</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+4447)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+4447

QOL.dll+4417: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
QOL.dll+441E: 83 F8 02                 - cmp eax,02
QOL.dll+4421: 0F 85 CC 33 DD 92        - jne re5dx9.exe+7877F3
QOL.dll+4427: E9 B1 33 DD 92           - jmp re5dx9.exe+7877DD
QOL.dll+442C: E8 9F 79 DA 92           - call re5dx9.exe+75BDD0
QOL.dll+4431: 84 C0                    - test al,al
QOL.dll+4433: 0F 84 27 2E DD 92        - je re5dx9.exe+787260
QOL.dll+4439: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+443E: 8B 48 20                 - mov ecx,[eax+20]
QOL.dll+4441: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+4447: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+444E: 83 F8 02                 - cmp eax,02
QOL.dll+4451: 0F 85 C5 2D DD 92        - jne re5dx9.exe+78721C
QOL.dll+4457: E9 04 2E DD 92           - jmp re5dx9.exe+787260
QOL.dll+445C: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
QOL.dll+4464: 0F 84 A6 56 DD 92        - je re5dx9.exe+789B10
QOL.dll+446A: E9 9C 56 DD 92           - jmp re5dx9.exe+789B0B
QOL.dll+446F: 00 A1 B8 31 1A 01        - add [ecx+re5dx9.exe+DA31B8],ah
QOL.dll+4475: 8B 48 20                 - mov ecx,[eax+20]
QOL.dll+4478: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
QOL.dll+447E: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>207</ID>
          <Description>"[00B87709] (19) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+787709)
define(bytes,E9 5E CC 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  call 00B5BDD0
  test al,al
  je 00B87712
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B87728
  jmp 00B87712


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+436C

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+787709

re5dx9.exe+7876D9: 0F 2F D1                 - comiss xmm2,xmm1
re5dx9.exe+7876DC: 76 15                    - jna re5dx9.exe+7876F3
re5dx9.exe+7876DE: 0F 57 C0                 - xorps xmm0,xmm0
re5dx9.exe+7876E1: F3 0F 11 86 C8 04 00 00  - movss [esi+000004C8],xmm0
re5dx9.exe+7876E9: F3 0F 11 86 C0 04 00 00  - movss [esi+000004C0],xmm0
re5dx9.exe+7876F1: EB 14                    - jmp re5dx9.exe+787707
re5dx9.exe+7876F3: F3 0F 10 8E C0 04 00 00  - movss xmm1,[esi+000004C0]
re5dx9.exe+7876FB: F3 0F 5C C8              - subss xmm1,xmm0
re5dx9.exe+7876FF: F3 0F 11 8E C0 04 00 00  - movss [esi+000004C0],xmm1
re5dx9.exe+787707: 8B CF                    - mov ecx,edi
// ---------- INJECTING HERE ----------
re5dx9.exe+787709: E9 5E CC 04 69           - jmp QOL.dll+436C
// ---------- DONE INJECTING  ----------
re5dx9.exe+78770E: 84 C0                    - test al,al
re5dx9.exe+787710: 75 16                    - jne re5dx9.exe+787728
re5dx9.exe+787712: F3 0F 10 86 B4 04 00 00  - movss xmm0,[esi+000004B4]
re5dx9.exe+78771A: F3 0F 5C 44 24 44        - subss xmm0,[esp+44]
re5dx9.exe+787720: F3 0F 11 86 B4 04 00 00  - movss [esi+000004B4],xmm0
re5dx9.exe+787728: 8B 8F 8C 2D 00 00        - mov ecx,[edi+00002D8C]
re5dx9.exe+78772E: C1 E9 02                 - shr ecx,02
re5dx9.exe+787731: F6 C1 01                 - test cl,01
re5dx9.exe+787734: 0F 84 0A 01 00 00        - je re5dx9.exe+787844
re5dx9.exe+78773A: 8B 44 24 18              - mov eax,[esp+18]
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>227</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+4387)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+4387

QOL.dll+4357: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
QOL.dll+435E: 83 F8 02              - cmp eax,02
QOL.dll+4361: 0F 85 47 34 DD 92     - jne re5dx9.exe+7877AE
QOL.dll+4367: E9 58 34 DD 92        - jmp re5dx9.exe+7877C4
QOL.dll+436C: E8 5F 7A DA 92        - call re5dx9.exe+75BDD0
QOL.dll+4371: 84 C0                 - test al,al
QOL.dll+4373: 0F 84 99 33 DD 92     - je re5dx9.exe+787712
QOL.dll+4379: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+437E: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4381: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+4387: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+438E: 83 F8 02              - cmp eax,02
QOL.dll+4391: 0F 85 91 33 DD 92     - jne re5dx9.exe+787728
QOL.dll+4397: E9 76 33 DD 92        - jmp re5dx9.exe+787712
QOL.dll+439C: E8 2F 7A DA 92        - call re5dx9.exe+75BDD0
QOL.dll+43A1: 84 C0                 - test al,al
QOL.dll+43A3: 0F 84 AF 32 DD 92     - je re5dx9.exe+787658
QOL.dll+43A9: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+43AE: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+43B1: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
QOL.dll+43B7: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>208</ID>
          <Description>"[00B78AC3] (20) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+778AC3)
define(bytes,E9 A8 B9 05 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  sete bl
  mov [esi+00002920],bl
  xor ebx,ebx
  mov [esi+00001F54],ebx
  cmp [esi+00002DA8],ebx
  jmp 00B78AD7


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+4470

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+778AC3

re5dx9.exe+778AAF: CC                 - int 3 
re5dx9.exe+778AB0: 55                 - push ebp
re5dx9.exe+778AB1: 8B EC              - mov ebp,esp
re5dx9.exe+778AB3: 83 E4 F0           - and esp,-10
re5dx9.exe+778AB6: 83 EC 14           - sub esp,14
re5dx9.exe+778AB9: 53                 - push ebx
re5dx9.exe+778ABA: 56                 - push esi
re5dx9.exe+778ABB: 57                 - push edi
re5dx9.exe+778ABC: 8B F1              - mov esi,ecx
re5dx9.exe+778ABE: E8 1D 88 CD FF     - call re5dx9.exe+4512E0
// ---------- INJECTING HERE ----------
re5dx9.exe+778AC3: E9 A8 B9 05 69     - jmp QOL.dll+4470
// ---------- DONE INJECTING  ----------
re5dx9.exe+778AC8: 90                 - nop 
re5dx9.exe+778AC9: 90                 - nop 
re5dx9.exe+778ACA: 90                 - nop 
re5dx9.exe+778ACB: 89 9E 54 1F 00 00  - mov [esi+00001F54],ebx
re5dx9.exe+778AD1: EB 04              - jmp re5dx9.exe+778AD7
re5dx9.exe+778AD3: 90                 - nop 
re5dx9.exe+778AD4: 90                 - nop 
re5dx9.exe+778AD5: 90                 - nop 
re5dx9.exe+778AD6: 90                 - nop 
re5dx9.exe+778AD7: 0F 85 F3 00 00 00  - jne re5dx9.exe+778BD0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>228</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+447E)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+447E

QOL.dll+444E: 83 F8 02                 - cmp eax,02
QOL.dll+4451: 0F 85 C5 2D DD 92        - jne re5dx9.exe+78721C
QOL.dll+4457: E9 04 2E DD 92           - jmp re5dx9.exe+787260
QOL.dll+445C: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
QOL.dll+4464: 0F 84 A6 56 DD 92        - je re5dx9.exe+789B10
QOL.dll+446A: E9 9C 56 DD 92           - jmp re5dx9.exe+789B0B
QOL.dll+446F: 00 A1 B8 31 1A 01        - add [ecx+re5dx9.exe+DA31B8],ah
QOL.dll+4475: 8B 48 20                 - mov ecx,[eax+20]
QOL.dll+4478: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
QOL.dll+447E: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
// ---------- INJECTING HERE ----------
QOL.dll+4485: 83 F8 02                 - cmp eax,02
// ---------- DONE INJECTING  ----------
QOL.dll+4488: 0F 94 C3                 - sete bl
QOL.dll+448B: 88 9E 20 29 00 00        - mov [esi+00002920],bl
QOL.dll+4491: 31 DB                    - xor ebx,ebx
QOL.dll+4493: 89 9E 54 1F 00 00        - mov [esi+00001F54],ebx
QOL.dll+4499: 39 9E A8 2D 00 00        - cmp [esi+00002DA8],ebx
QOL.dll+449F: E9 33 46 DC 92           - jmp re5dx9.exe+778AD7
QOL.dll+44A4: 8B 48 20                 - mov ecx,[eax+20]
QOL.dll+44A7: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
QOL.dll+44AD: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
QOL.dll+44B4: 83 F8 01                 - cmp eax,01
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>209</ID>
          <Description>"[00B67FC2] (21) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+767FC2)
define(bytes,E9 FD C4 06 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  mov ecx,[esp+000000BC]
  cmp eax,02
  je 00B67FD2
  jmp 00B67FC9


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+44C4

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+767FC2

re5dx9.exe+767F9D: 72 03                       - jb re5dx9.exe+767FA2
re5dx9.exe+767F9F: 0F 28 D0                    - movaps xmm2,xmm0
re5dx9.exe+767FA2: 0F 2F D1                    - comiss xmm2,xmm1
re5dx9.exe+767FA5: 72 13                       - jb re5dx9.exe+767FBA
re5dx9.exe+767FA7: 0F 28 CA                    - movaps xmm1,xmm2
re5dx9.exe+767FAA: F3 0F 5C 0D EC E7 0B 01     - subss xmm1,[re5dx9.exe+CBE7EC]
re5dx9.exe+767FB2: 0F 2F C1                    - comiss xmm0,xmm1
re5dx9.exe+767FB5: 76 03                       - jna re5dx9.exe+767FBA
re5dx9.exe+767FB7: 0F 28 D0                    - movaps xmm2,xmm0
re5dx9.exe+767FBA: F3 0F 11 96 24 2A 00 00     - movss [esi+00002A24],xmm2
// ---------- INJECTING HERE ----------
re5dx9.exe+767FC2: E9 FD C4 06 69              - jmp QOL.dll+44C4
// ---------- DONE INJECTING  ----------
re5dx9.exe+767FC7: 90                          - nop 
re5dx9.exe+767FC8: 90                          - nop 
re5dx9.exe+767FC9: 83 B9 98 00 00 00 00        - cmp dword ptr [ecx+00000098],00
re5dx9.exe+767FD0: 74 18                       - je re5dx9.exe+767FEA
re5dx9.exe+767FD2: F3 0F 10 86 C8 2D 00 00     - movss xmm0,[esi+00002DC8]
re5dx9.exe+767FDA: F3 0F 11 86 0C 29 00 00     - movss [esi+0000290C],xmm0
re5dx9.exe+767FE2: F3 0F 11 86 08 29 00 00     - movss [esi+00002908],xmm0
re5dx9.exe+767FEA: F3 0F 10 84 24 C0 00 00 00  - movss xmm0,[esp+000000C0]
re5dx9.exe+767FF3: 8D BE 30 28 00 00           - lea edi,[esi+00002830]
re5dx9.exe+767FF9: F3 0F 11 07                 - movss [edi],xmm0
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>229</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+44D2)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+44D2

QOL.dll+44A4: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+44A7: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
QOL.dll+44AD: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
QOL.dll+44B4: 83 F8 01              - cmp eax,01
QOL.dll+44B7: 0F 85 05 57 A9 92     - jne re5dx9.exe+449BC2
QOL.dll+44BD: E9 CF 55 A9 92        - jmp re5dx9.exe+449A91
QOL.dll+44C2: 00 00                 - add [eax],al
QOL.dll+44C4: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+44C9: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+44CC: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+44D2: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+44D9: 8B 8C 24 BC 00 00 00  - mov ecx,[esp+000000BC]
QOL.dll+44E0: 83 F8 02              - cmp eax,02
QOL.dll+44E3: 0F 84 E9 3A DB 92     - je re5dx9.exe+767FD2
QOL.dll+44E9: E9 DB 3A DB 92        - jmp re5dx9.exe+767FC9
QOL.dll+44EE: 00 00                 - add [eax],al
QOL.dll+44F0: 8B 8F 40 10 00 00     - mov ecx,[edi+00001040]
QOL.dll+44F6: 80 B9 FC 30 00 00 00  - cmp byte ptr [ecx+000030FC],00
QOL.dll+44FD: 0F 85 5D 2D DD 92     - jne re5dx9.exe+787260
QOL.dll+4503: F6 87 7E 2D 00 00 01  - test byte ptr [edi+00002D7E],01
QOL.dll+450A: E9 14 2D DD 92        - jmp re5dx9.exe+787223
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>210</ID>
          <Description>"[00B7493E] (22) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+77493E)
define(bytes,E9 2D FC 05 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  test al,al
  jne 00B74B0A
  mov eax,[esi+00001040]
  cmp byte ptr [eax+000030FC],00
  jne 00B74B0A
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B74946
  jmp 00B74B0A


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+4570

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+77493E

re5dx9.exe+7748F9: F3 0F 11 94 24 80 00 00 00  - movss [esp+00000080],xmm2
re5dx9.exe+774902: F3 0F 11 8C 24 84 00 00 00  - movss [esp+00000084],xmm1
re5dx9.exe+77490B: F3 0F 11 84 24 88 00 00 00  - movss [esp+00000088],xmm0
re5dx9.exe+774914: F3 0F 11 9C 24 8C 00 00 00  - movss [esp+0000008C],xmm3
re5dx9.exe+77491D: 32 DB                       - xor bl,bl
re5dx9.exe+77491F: 83 BE A8 2D 00 00 00        - cmp dword ptr [esi+00002DA8],00
re5dx9.exe+774926: C6 86 1C 29 00 00 01        - mov byte ptr [esi+0000291C],01
re5dx9.exe+77492D: 0F 85 D7 01 00 00           - jne re5dx9.exe+774B0A
re5dx9.exe+774933: 8B 0D 28 AD 23 01           - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+774939: E8 42 96 C2 FF              - call re5dx9.exe+39DF80
// ---------- INJECTING HERE ----------
re5dx9.exe+77493E: E9 2D FC 05 69              - jmp QOL.dll+4570
// ---------- DONE INJECTING  ----------
re5dx9.exe+774943: 90                          - nop 
re5dx9.exe+774944: 90                          - nop 
re5dx9.exe+774945: 90                          - nop 
re5dx9.exe+774946: 38 5C 24 37                 - cmp [esp+37],bl
re5dx9.exe+77494A: 8B BE 64 2D 00 00           - mov edi,[esi+00002D64]
re5dx9.exe+774950: A1 B8 31 1A 01              - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+774955: 0F 84 8A 01 00 00           - je re5dx9.exe+774AE5
re5dx9.exe+77495B: 8B 48 20                    - mov ecx,[eax+20]
re5dx9.exe+77495E: 69 C9 74 8C 00 00           - imul ecx,ecx,00008C74
re5dx9.exe+774964: E9 97 B6 72 02              - jmp 032A0000
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>230</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+4599)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+4599

QOL.dll+456D: 00 00                 - add [eax],al
QOL.dll+456F: 00 84 C0 0F 85 92 05  - add [eax+eax*8+0592850F],al
QOL.dll+4576: DC 92 8B 86 40 10     - fcom qword ptr [edx+1040868B]
QOL.dll+457C: 00 00                 - add [eax],al
QOL.dll+457E: 80 B8 FC 30 00 00 00  - cmp byte ptr [eax+000030FC],00
QOL.dll+4585: 0F 85 7F 05 DC 92     - jne re5dx9.exe+774B0A
QOL.dll+458B: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+4590: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4593: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
QOL.dll+4599: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- INJECTING HERE ----------
QOL.dll+45A0: 83 F8 02              - cmp eax,02
// ---------- DONE INJECTING  ----------
QOL.dll+45A3: 0F 85 9D 03 DC 92     - jne re5dx9.exe+774946
QOL.dll+45A9: E9 5C 05 DC 92        - jmp re5dx9.exe+774B0A
QOL.dll+45AE: 00 00                 - add [eax],al
QOL.dll+45B0: 8B 8E 40 10 00 00     - mov ecx,[esi+00001040]
QOL.dll+45B6: 80 B9 FC 30 00 00 00  - cmp byte ptr [ecx+000030FC],00
QOL.dll+45BD: 0F 85 EF 14 DD 92     - jne re5dx9.exe+785AB2
QOL.dll+45C3: 83 B8 98 00 00 00 00  - cmp dword ptr [eax+00000098],00
QOL.dll+45CA: 0F 85 E2 14 DD 92     - jne re5dx9.exe+785AB2
QOL.dll+45D0: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+45D5: 8B 48 20              - mov ecx,[eax+20]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>211</ID>
          <Description>"[00849A6F] (23) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+449A6F)
define(bytes,E9 30 AA 38 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,01
  jne 00849BC2
  jmp 00849A91


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+44A4

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+449A6F

re5dx9.exe+449A46: 8B CF                 - mov ecx,edi
re5dx9.exe+449A48: E8 E3 22 31 00        - call re5dx9.exe+75BD30
re5dx9.exe+449A4D: 8B D8                 - mov ebx,eax
re5dx9.exe+449A4F: 85 DB                 - test ebx,ebx
re5dx9.exe+449A51: 0F 84 06 03 00 00     - je re5dx9.exe+449D5D
re5dx9.exe+449A57: 8B 0D 28 AD 23 01     - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+449A5D: E8 1E 45 F5 FF        - call re5dx9.exe+39DF80
re5dx9.exe+449A62: 84 C0                 - test al,al
re5dx9.exe+449A64: 0F 85 F3 02 00 00     - jne re5dx9.exe+449D5D
re5dx9.exe+449A6A: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
// ---------- INJECTING HERE ----------
re5dx9.exe+449A6F: E9 30 AA 38 69        - jmp QOL.dll+44A4
// ---------- DONE INJECTING  ----------
re5dx9.exe+449A74: 90                    - nop 
re5dx9.exe+449A75: 90                    - nop 
re5dx9.exe+449A76: 90                    - nop 
re5dx9.exe+449A77: 90                    - nop 
re5dx9.exe+449A78: 8B 84 01 94 00 00 00  - mov eax,[ecx+eax+00000094]
re5dx9.exe+449A7F: 83 E8 00              - sub eax,00
re5dx9.exe+449A82: 0F 84 3A 01 00 00     - je re5dx9.exe+449BC2
re5dx9.exe+449A88: 83 E8 01              - sub eax,01
re5dx9.exe+449A8B: 0F 85 CC 02 00 00     - jne re5dx9.exe+449D5D
re5dx9.exe+449A91: 8B CF                 - mov ecx,edi
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>231</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+44AD)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+44AD

QOL.dll+447E: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
QOL.dll+4485: 83 F8 02              - cmp eax,02
QOL.dll+4488: 0F 94 C3              - sete bl
QOL.dll+448B: 88 9E 20 29 00 00     - mov [esi+00002920],bl
QOL.dll+4491: 31 DB                 - xor ebx,ebx
QOL.dll+4493: 89 9E 54 1F 00 00     - mov [esi+00001F54],ebx
QOL.dll+4499: 39 9E A8 2D 00 00     - cmp [esi+00002DA8],ebx
QOL.dll+449F: E9 33 46 DC 92        - jmp re5dx9.exe+778AD7
QOL.dll+44A4: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+44A7: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+44AD: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+44B4: 83 F8 01              - cmp eax,01
QOL.dll+44B7: 0F 85 05 57 A9 92     - jne re5dx9.exe+449BC2
QOL.dll+44BD: E9 CF 55 A9 92        - jmp re5dx9.exe+449A91
QOL.dll+44C2: 00 00                 - add [eax],al
QOL.dll+44C4: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+44C9: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+44CC: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
QOL.dll+44D2: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
QOL.dll+44D9: 8B 8C 24 BC 00 00 00  - mov ecx,[esp+000000BC]
QOL.dll+44E0: 83 F8 02              - cmp eax,02
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>212</ID>
          <Description>"[00B877A5] (24) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+7877A5)
define(bytes,E9 92 CB 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  call 00B5BDD0
  test al,al
  je 00B877C4
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B877AE
  jmp 00B877C4


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+433C

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+7877A5

re5dx9.exe+787771: 76 08                    - jna re5dx9.exe+78777B
re5dx9.exe+787773: F3 0F 5E 4C 24 1C        - divss xmm1,[esp+1C]
re5dx9.exe+787779: EB 06                    - jmp re5dx9.exe+787781
re5dx9.exe+78777B: F3 0F 5E 4C 24 20        - divss xmm1,[esp+20]
re5dx9.exe+787781: F3 0F 59 05 20 9D 04 01  - mulss xmm0,[re5dx9.exe+C49D20]
re5dx9.exe+787789: F3 0F 11 4C 24 48        - movss [esp+48],xmm1
re5dx9.exe+78778F: F3 0F 58 CA              - addss xmm1,xmm2
re5dx9.exe+787793: 8B CF                    - mov ecx,edi
re5dx9.exe+787795: F3 0F 11 8E B8 04 00 00  - movss [esi+000004B8],xmm1
re5dx9.exe+78779D: F3 0F 11 86 C4 04 00 00  - movss [esi+000004C4],xmm0
// ---------- INJECTING HERE ----------
re5dx9.exe+7877A5: E9 92 CB 04 69           - jmp QOL.dll+433C
// ---------- DONE INJECTING  ----------
re5dx9.exe+7877AA: 84 C0                    - test al,al
re5dx9.exe+7877AC: 74 16                    - je re5dx9.exe+7877C4
re5dx9.exe+7877AE: F3 0F 10 44 24 48        - movss xmm0,[esp+48]
re5dx9.exe+7877B4: F3 0F 58 87 0C 29 00 00  - addss xmm0,[edi+0000290C]
re5dx9.exe+7877BC: F3 0F 11 87 0C 29 00 00  - movss [edi+0000290C],xmm0
re5dx9.exe+7877C4: F3 0F 10 86 C0 04 00 00  - movss xmm0,[esi+000004C0]
re5dx9.exe+7877CC: 8B CF                    - mov ecx,edi
re5dx9.exe+7877CE: F3 0F 11 44 24 48        - movss [esp+48],xmm0
re5dx9.exe+7877D4: E9 23 CC 04 69           - jmp QOL.dll+43FC
re5dx9.exe+7877D9: 84 C0                    - test al,al
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>232</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+4357)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+4357

QOL.dll+4336: E9 49 5A DD 92        - jmp re5dx9.exe+789D84
QOL.dll+433B: 00 E8                 - add al,ch
QOL.dll+433D: 8F                    - db 8f
QOL.dll+433E: 7A DA                 - jp QOL.dll+431A
QOL.dll+4340: 92                    - xchg eax,edx
QOL.dll+4341: 84 C0                 - test al,al
QOL.dll+4343: 0F 84 7B 34 DD 92     - je re5dx9.exe+7877C4
QOL.dll+4349: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+434E: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4351: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+4357: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+435E: 83 F8 02              - cmp eax,02
QOL.dll+4361: 0F 85 47 34 DD 92     - jne re5dx9.exe+7877AE
QOL.dll+4367: E9 58 34 DD 92        - jmp re5dx9.exe+7877C4
QOL.dll+436C: E8 5F 7A DA 92        - call re5dx9.exe+75BDD0
QOL.dll+4371: 84 C0                 - test al,al
QOL.dll+4373: 0F 84 99 33 DD 92     - je re5dx9.exe+787712
QOL.dll+4379: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+437E: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4381: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
QOL.dll+4387: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>213</ID>
          <Description>"[00B877D4] (25) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+7877D4)
define(bytes,E9 23 CC 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  call 00B5BDD0
  test al,al
  je 00B877DD
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B877F3
  jmp 00B877DD


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+43FC

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+7877D4

re5dx9.exe+78779D: F3 0F 11 86 C4 04 00 00  - movss [esi+000004C4],xmm0
re5dx9.exe+7877A5: E9 56 88 A0 00           - jmp 01590000
re5dx9.exe+7877AA: 84 C0                    - test al,al
re5dx9.exe+7877AC: 74 16                    - je re5dx9.exe+7877C4
re5dx9.exe+7877AE: F3 0F 10 44 24 48        - movss xmm0,[esp+48]
re5dx9.exe+7877B4: F3 0F 58 87 0C 29 00 00  - addss xmm0,[edi+0000290C]
re5dx9.exe+7877BC: F3 0F 11 87 0C 29 00 00  - movss [edi+0000290C],xmm0
re5dx9.exe+7877C4: F3 0F 10 86 C0 04 00 00  - movss xmm0,[esi+000004C0]
re5dx9.exe+7877CC: 8B CF                    - mov ecx,edi
re5dx9.exe+7877CE: F3 0F 11 44 24 48        - movss [esp+48],xmm0
// ---------- INJECTING HERE ----------
re5dx9.exe+7877D4: E9 23 CC 04 69           - jmp QOL.dll+43FC
// ---------- DONE INJECTING  ----------
re5dx9.exe+7877D9: 84 C0                    - test al,al
re5dx9.exe+7877DB: 75 16                    - jne re5dx9.exe+7877F3
re5dx9.exe+7877DD: F3 0F 10 86 B4 04 00 00  - movss xmm0,[esi+000004B4]
re5dx9.exe+7877E5: F3 0F 5C 44 24 48        - subss xmm0,[esp+48]
re5dx9.exe+7877EB: F3 0F 11 86 B4 04 00 00  - movss [esi+000004B4],xmm0
re5dx9.exe+7877F3: D9 44 24 48              - fld dword ptr [esp+48]
re5dx9.exe+7877F7: 51                       - push ecx
re5dx9.exe+7877F8: D9 1C 24                 - fstp dword ptr [esp]
re5dx9.exe+7877FB: 53                       - push ebx
re5dx9.exe+7877FC: 8B CF                    - mov ecx,edi
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>233</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+4417)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+4417

QOL.dll+43E7: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
QOL.dll+43EE: 83 F8 02              - cmp eax,02
QOL.dll+43F1: 0F 85 5D 22 DD 92     - jne re5dx9.exe+786654
QOL.dll+43F7: E9 5D 22 DD 92        - jmp re5dx9.exe+786659
QOL.dll+43FC: E8 CF 79 DA 92        - call re5dx9.exe+75BDD0
QOL.dll+4401: 84 C0                 - test al,al
QOL.dll+4403: 0F 84 D4 33 DD 92     - je re5dx9.exe+7877DD
QOL.dll+4409: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+440E: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4411: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+4417: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+441E: 83 F8 02              - cmp eax,02
QOL.dll+4421: 0F 85 CC 33 DD 92     - jne re5dx9.exe+7877F3
QOL.dll+4427: E9 B1 33 DD 92        - jmp re5dx9.exe+7877DD
QOL.dll+442C: E8 9F 79 DA 92        - call re5dx9.exe+75BDD0
QOL.dll+4431: 84 C0                 - test al,al
QOL.dll+4433: 0F 84 27 2E DD 92     - je re5dx9.exe+787260
QOL.dll+4439: A1 B8 31 1A 01        - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+443E: 8B 48 20              - mov ecx,[eax+20]
QOL.dll+4441: 69 C9 74 8C 00 00     - imul ecx,ecx,00008C74
QOL.dll+4447: 8B 84 08 94 00 00 00  - mov eax,[eax+ecx+00000094]
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>214</ID>
          <Description>"[00B84D72] (26) Offset Change"</Description>
          <LastState/>
          <Color>FF0000</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+784D72)
define(bytes,E9 51 F5 04 69)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp dword ptr [eax+00000098],00
  jne 00B84D7B
  mov eax,[011A31B8]
  mov ecx,[eax+20]
  imul ecx,ecx,00008C74
  movzx eax,byte ptr[eax+ecx+00000094]
  cmp eax,02
  jne 00B84DB5
  jmp 00B84D7B


address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // jmp QOL.dll+42C8

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+784D72

re5dx9.exe+784D53: 8D 8E A0 21 00 00        - lea ecx,[esi+000021A0]
re5dx9.exe+784D59: E8 A2 59 0C 00           - call re5dx9.exe+84A700
re5dx9.exe+784D5E: 85 C0                    - test eax,eax
re5dx9.exe+784D60: 74 53                    - je re5dx9.exe+784DB5
re5dx9.exe+784D62: 8B 40 04                 - mov eax,[eax+04]
re5dx9.exe+784D65: 50                       - push eax
re5dx9.exe+784D66: E8 45 F8 BE FF           - call re5dx9.exe+3745B0
re5dx9.exe+784D6B: 83 C4 04                 - add esp,04
re5dx9.exe+784D6E: 85 C0                    - test eax,eax
re5dx9.exe+784D70: 74 43                    - je re5dx9.exe+784DB5
// ---------- INJECTING HERE ----------
re5dx9.exe+784D72: E9 51 F5 04 69           - jmp QOL.dll+42C8
// ---------- DONE INJECTING  ----------
re5dx9.exe+784D77: 90                       - nop 
re5dx9.exe+784D78: 90                       - nop 
re5dx9.exe+784D79: 74 3A                    - je re5dx9.exe+784DB5
re5dx9.exe+784D7B: 8D 8C 24 A0 01 00 00     - lea ecx,[esp+000001A0]
re5dx9.exe+784D82: 51                       - push ecx
re5dx9.exe+784D83: 8B CE                    - mov ecx,esi
re5dx9.exe+784D85: E8 36 E3 91 FF           - call re5dx9.exe+A30C0
re5dx9.exe+784D8A: F3 0F 10 48 04           - movss xmm1,[eax+04]
re5dx9.exe+784D8F: F3 0F 10 86 10 2A 00 00  - movss xmm0,[esi+00002A10]
re5dx9.exe+784D97: 51                       - push ecx
}
</AssemblerScript>
          <CheatEntries>
            <CheatEntry>
              <ID>234</ID>
              <Description>"tweak"</Description>
              <LastState Activated="1"/>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-20
  Author : xxric

  This script does blah blah blah
}

define(address,"QOL.dll"+42E3)
define(bytes,8B 84 08 94 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,byte ptr[eax+ecx+00000094]
  jmp return

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[eax+ecx+00000094]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: QOL.dll+42E3

QOL.dll+42B3: 84 C0                    - test al,al
QOL.dll+42B5: 0F 85 9D 78 EB 92        - jne re5dx9.exe+86BB58
QOL.dll+42BB: 8B 8E E0 00 00 00        - mov ecx,[esi+000000E0]
QOL.dll+42C1: E9 64 78 EB 92           - jmp re5dx9.exe+86BB2A
QOL.dll+42C6: 00 00                    - add [eax],al
QOL.dll+42C8: 83 B8 98 00 00 00 00     - cmp dword ptr [eax+00000098],00
QOL.dll+42CF: 0F 85 A6 0A DD 92        - jne re5dx9.exe+784D7B
QOL.dll+42D5: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
QOL.dll+42DA: 8B 48 20                 - mov ecx,[eax+20]
QOL.dll+42DD: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
QOL.dll+42E3: 8B 84 08 94 00 00 00     - mov eax,[eax+ecx+00000094]
// ---------- DONE INJECTING  ----------
QOL.dll+42EA: 83 F8 02                 - cmp eax,02
QOL.dll+42ED: 0F 85 C2 0A DD 92        - jne re5dx9.exe+784DB5
QOL.dll+42F3: E9 83 0A DD 92           - jmp re5dx9.exe+784D7B
QOL.dll+42F8: F3 0F 10 0D E4 AD 23 01  - movss xmm1,[re5dx9.exe+E3ADE4]
QOL.dll+4300: F3 0F 10 15 E8 AD 23 01  - movss xmm2,[re5dx9.exe+E3ADE8]
QOL.dll+4308: F3 0F 11 44 24 50        - movss [esp+50],xmm0
QOL.dll+430E: F3 0F 11 4C 24 54        - movss [esp+54],xmm1
QOL.dll+4314: F3 0F 11 54 24 58        - movss [esp+58],xmm2
QOL.dll+431A: 83 BC 08 94 00 00 00 01  - cmp dword ptr [eax+ecx+00000094],01
QOL.dll+4322: 0F 84 A6 5A DD 92        - je re5dx9.exe+789DCE
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"[007BAB72] Mouse Sensitivity Check Offset Change"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+3BAB72)
define(bytes,8B 8C 08 98 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx ecx,[eax+ecx+00000095]
  jmp 007BAB79

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov ecx,[eax+ecx+00000098]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+3BAB72

re5dx9.exe+3BAB52: 7B 00                       - jnp re5dx9.exe+3BAB54
re5dx9.exe+3BAB54: 85 AA 7B 00 98 AA           - test [edx-5567FF85],ebp
re5dx9.exe+3BAB5A: 7B 00                       - jnp re5dx9.exe+3BAB5C
re5dx9.exe+3BAB5C: AB                          - stosd 
re5dx9.exe+3BAB5D: AA                          - stosb 
re5dx9.exe+3BAB5E: 7B 00                       - jnp re5dx9.exe+3BAB60
re5dx9.exe+3BAB60: 51                          - push ecx
re5dx9.exe+3BAB61: 8B 41 20                    - mov eax,[ecx+20]
re5dx9.exe+3BAB64: F3 0F 10 05 7C 46 F5 00     - movss xmm0,[re5dx9.exe+B5467C]
re5dx9.exe+3BAB6C: 69 C0 74 8C 00 00           - imul eax,eax,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+3BAB72: 8B 8C 08 98 00 00 00        - mov ecx,[eax+ecx+00000098]
// ---------- DONE INJECTING  ----------
re5dx9.exe+3BAB79: 83 F9 09                    - cmp ecx,09
re5dx9.exe+3BAB7C: F3 0F 11 04 24              - movss [esp],xmm0
re5dx9.exe+3BAB81: 77 0E                       - ja re5dx9.exe+3BAB91
re5dx9.exe+3BAB83: F3 0F 10 04 8D E0 9E 0D 01  - movss xmm0,[ecx*4+re5dx9.exe+CD9EE0]
re5dx9.exe+3BAB8C: F3 0F 11 04 24              - movss [esp],xmm0
re5dx9.exe+3BAB91: D9 04 24                    - fld dword ptr [esp]
re5dx9.exe+3BAB94: 59                          - pop ecx
re5dx9.exe+3BAB95: C3                          - ret 
re5dx9.exe+3BAB96: CC                          - int 3 
re5dx9.exe+3BAB97: CC                          - int 3 
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>57</ID>
      <Description>"Invert Mouse"</Description>
      <Options moManualExpandCollapse="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>58</ID>
          <Description>"[00849CAC] (1) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+449CAC)
define(bytes,8B 84 01 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000096]
  jmp 00849CB3

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+449CAC

re5dx9.exe+449C76: F3 0F 10 0D 64 E6 0B 01  - movss xmm1,[re5dx9.exe+CBE664]
re5dx9.exe+449C7E: F3 0F 10 44 24 1C        - movss xmm0,[esp+1C]
re5dx9.exe+449C84: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+449C88: F3 0F 11 4C 24 18        - movss [esp+18],xmm1
re5dx9.exe+449C8E: EB 0E                    - jmp re5dx9.exe+449C9E
re5dx9.exe+449C90: F3 0F 10 44 24 1C        - movss xmm0,[esp+1C]
re5dx9.exe+449C96: F3 0F 10 0D 64 E6 0B 01  - movss xmm1,[re5dx9.exe+CBE664]
re5dx9.exe+449C9E: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+449CA3: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+449CA6: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+449CAC: 8B 84 01 9C 00 00 00     - mov eax,[ecx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+449CB3: 83 E8 01                 - sub eax,01
re5dx9.exe+449CB6: 74 05                    - je re5dx9.exe+449CBD
re5dx9.exe+449CB8: 83 E8 02                 - sub eax,02
re5dx9.exe+449CBB: 75 04                    - jne re5dx9.exe+449CC1
re5dx9.exe+449CBD: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+449CC1: F3 0F 58 44 24 14        - addss xmm0,[esp+14]
re5dx9.exe+449CC7: 8B 0D 28 AD 23 01        - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+449CCD: 6A 07                    - push 07
re5dx9.exe+449CCF: F3 0F 11 44 24 18        - movss [esp+18],xmm0
re5dx9.exe+449CD5: E8 E6 4B F5 FF           - call re5dx9.exe+39E8C0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>59</ID>
          <Description>"[00B8A239] (2) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78A239)
define(bytes,8B 84 01 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000096]
  jmp 00B8A240

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78A239

re5dx9.exe+78A20C: 50                       - push eax
re5dx9.exe+78A20D: 8B CE                    - mov ecx,esi
re5dx9.exe+78A20F: E8 AC 8E 91 FF           - call re5dx9.exe+A30C0
re5dx9.exe+78A214: D9 40 04                 - fld dword ptr [eax+04]
re5dx9.exe+78A217: D9 9E 10 2A 00 00        - fstp dword ptr [esi+00002A10]
re5dx9.exe+78A21D: F3 0F 10 44 24 3C        - movss xmm0,[esp+3C]
re5dx9.exe+78A223: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78A228: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78A22B: F3 0F 10 8E 10 2A 00 00  - movss xmm1,[esi+00002A10]
re5dx9.exe+78A233: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+78A239: 8B 84 01 9C 00 00 00     - mov eax,[ecx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+78A240: 83 E8 02                 - sub eax,02
re5dx9.exe+78A243: F3 0F 11 4C 24 40        - movss [esp+40],xmm1
re5dx9.exe+78A249: 74 26                    - je re5dx9.exe+78A271
re5dx9.exe+78A24B: 83 E8 01                 - sub eax,01
re5dx9.exe+78A24E: 75 2F                    - jne re5dx9.exe+78A27F
re5dx9.exe+78A250: F3 0F 10 0D FC E6 0B 01  - movss xmm1,[re5dx9.exe+CBE6FC]
re5dx9.exe+78A258: F3 0F 58 C1              - addss xmm0,xmm1
re5dx9.exe+78A25C: 0F 2F C1                 - comiss xmm0,xmm1
re5dx9.exe+78A25F: F3 0F 11 44 24 3C        - movss [esp+3C],xmm0
re5dx9.exe+78A265: 76 18                    - jna re5dx9.exe+78A27F
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>60</ID>
          <Description>"[00B679A2] (3) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+7679A2)
define(bytes,8B 84 01 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000096]
  jmp 00B679A9

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+7679A2

re5dx9.exe+767977: C1 E9 03                 - shr ecx,03
re5dx9.exe+76797A: F6 C1 01                 - test cl,01
re5dx9.exe+76797D: 0F 84 A8 03 00 00        - je re5dx9.exe+767D2B
re5dx9.exe+767983: C1 E8 10                 - shr eax,10
re5dx9.exe+767986: A8 01                    - test al,01
re5dx9.exe+767988: 0F 85 9D 03 00 00        - jne re5dx9.exe+767D2B
re5dx9.exe+76798E: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+767993: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+767996: 8B 15 64 98 23 01        - mov edx,[re5dx9.exe+E39864]
re5dx9.exe+76799C: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+7679A2: 8B 84 01 9C 00 00 00     - mov eax,[ecx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+7679A9: F3 0F 2A 4A 50           - cvtsi2ss xmm1,[edx+50]
re5dx9.exe+7679AE: F3 0F 59 0D 40 EA 0B 01  - mulss xmm1,[re5dx9.exe+CBEA40]
re5dx9.exe+7679B6: F3 0F 10 87 0C 09 00 00  - movss xmm0,[edi+0000090C]
re5dx9.exe+7679BE: 83 C0 FE                 - add eax,-02
re5dx9.exe+7679C1: 83 F8 01                 - cmp eax,01
re5dx9.exe+7679C4: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+7679C8: F3 0F 59 05 94 E7 0B 01  - mulss xmm0,[re5dx9.exe+CBE794]
re5dx9.exe+7679D0: F3 0F 11 4C 24 20        - movss [esp+20],xmm1
re5dx9.exe+7679D6: F3 0F 11 44 24 10        - movss [esp+10],xmm0
re5dx9.exe+7679DC: 77 0E                    - ja re5dx9.exe+7679EC
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>61</ID>
          <Description>"[00B67C33] (4) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+767C33)
define(bytes,8B 8C 0F 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx ecx,[edi+ecx+00000096]
  jmp 00B67C3A

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov ecx,[edi+ecx+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+767C33

re5dx9.exe+767BFA: 74 1A                    - je re5dx9.exe+767C16
re5dx9.exe+767BFC: F3 0F 10 8E 24 2A 00 00  - movss xmm1,[esi+00002A24]
re5dx9.exe+767C04: F3 0F 58 C8              - addss xmm1,xmm0
re5dx9.exe+767C08: F3 0F 11 8E 24 2A 00 00  - movss [esi+00002A24],xmm1
re5dx9.exe+767C10: 8B 15 14 38 1A 01        - mov edx,[re5dx9.exe+DA3814]
re5dx9.exe+767C16: F3 0F 10 8F 10 09 00 00  - movss xmm1,[edi+00000910]
re5dx9.exe+767C1E: 8B 0D B8 31 1A 01        - mov ecx,[re5dx9.exe+DA31B8]
re5dx9.exe+767C24: 8B 79 20                 - mov edi,[ecx+20]
re5dx9.exe+767C27: F3 0F 59 4C 24 20        - mulss xmm1,[esp+20]
re5dx9.exe+767C2D: 69 FF 74 8C 00 00        - imul edi,edi,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+767C33: 8B 8C 0F 9C 00 00 00     - mov ecx,[edi+ecx+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+767C3A: 83 E9 01                 - sub ecx,01
re5dx9.exe+767C3D: F3 0F 59 0D 94 E7 0B 01  - mulss xmm1,[re5dx9.exe+CBE794]
re5dx9.exe+767C45: 74 05                    - je re5dx9.exe+767C4C
re5dx9.exe+767C47: 83 E9 02                 - sub ecx,02
re5dx9.exe+767C4A: 75 08                    - jne re5dx9.exe+767C54
re5dx9.exe+767C4C: F3 0F 59 0D 64 E6 0B 01  - mulss xmm1,[re5dx9.exe+CBE664]
re5dx9.exe+767C54: 84 C0                    - test al,al
re5dx9.exe+767C56: F3 0F 10 82 38 04 00 00  - movss xmm0,[edx+00000438]
re5dx9.exe+767C5E: 8B 0D FC 30 1A 01        - mov ecx,[re5dx9.exe+DA30FC]
re5dx9.exe+767C64: F3 0F 59 C1              - mulss xmm0,xmm1
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>62</ID>
          <Description>"[00B8B10A] (5) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78B10A)
define(bytes,8B 84 01 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000096]
  jmp 00B8B111

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78B10A

re5dx9.exe+78B0D0: F3 0F 11 44 24 40        - movss [esp+40],xmm0
re5dx9.exe+78B0D6: F3 0F 59 05 B0 E6 0B 01  - mulss xmm0,[re5dx9.exe+CBE6B0]
re5dx9.exe+78B0DE: 0F 5A C0                 - cvtps2pd xmm0,xmm0
re5dx9.exe+78B0E1: E8 05 82 2D 00           - call re5dx9.exe+A632EB
re5dx9.exe+78B0E6: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78B0EB: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78B0EE: F3 0F 10 8B E4 06 00 00  - movss xmm1,[ebx+000006E4]
re5dx9.exe+78B0F6: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
re5dx9.exe+78B0FC: F3 0F 59 8E 50 04 00 00  - mulss xmm1,[esi+00000450]
re5dx9.exe+78B104: F3 0F 59 4C 24 3C        - mulss xmm1,[esp+3C]
// ---------- INJECTING HERE ----------
re5dx9.exe+78B10A: 8B 84 01 9C 00 00 00     - mov eax,[ecx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+78B111: F2 0F 5A C0              - cvtsd2ss xmm0,xmm0
re5dx9.exe+78B115: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+78B119: F3 0F 10 0D 30 E7 0B 01  - movss xmm1,[re5dx9.exe+CBE730]
re5dx9.exe+78B121: 0F 54 C1                 - andps xmm0,xmm1
re5dx9.exe+78B124: 83 C0 FE                 - add eax,-02
re5dx9.exe+78B127: 83 F8 01                 - cmp eax,01
re5dx9.exe+78B12A: F3 0F 11 44 24 50        - movss [esp+50],xmm0
re5dx9.exe+78B130: F3 0F 10 44 24 40        - movss xmm0,[esp+40]
re5dx9.exe+78B136: 77 08                    - ja re5dx9.exe+78B140
re5dx9.exe+78B138: F3 0F 59 05 64 E6 0B 01  - mulss xmm0,[re5dx9.exe+CBE664]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>63</ID>
          <Description>"[00B8AE8D] (6) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78AE8D)
define(bytes,8B 84 01 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000096]
  jmp 00B8AE94

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78AE8D

re5dx9.exe+78AE54: F3 0F 59 05 B0 E6 0B 01  - mulss xmm0,[re5dx9.exe+CBE6B0]
re5dx9.exe+78AE5C: 0F 5A C0                 - cvtps2pd xmm0,xmm0
re5dx9.exe+78AE5F: E8 87 84 2D 00           - call re5dx9.exe+A632EB
re5dx9.exe+78AE64: A1 14 38 1A 01           - mov eax,[re5dx9.exe+DA3814]
re5dx9.exe+78AE69: F3 0F 10 8B E4 06 00 00  - movss xmm1,[ebx+000006E4]
re5dx9.exe+78AE71: F3 0F 59 88 50 04 00 00  - mulss xmm1,[eax+00000450]
re5dx9.exe+78AE79: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78AE7E: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78AE81: F3 0F 59 4C 24 3C        - mulss xmm1,[esp+3C]
re5dx9.exe+78AE87: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+78AE8D: 8B 84 01 9C 00 00 00     - mov eax,[ecx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+78AE94: F2 0F 5A C0              - cvtsd2ss xmm0,xmm0
re5dx9.exe+78AE98: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+78AE9C: F3 0F 10 0D 30 E7 0B 01  - movss xmm1,[re5dx9.exe+CBE730]
re5dx9.exe+78AEA4: 0F 54 C1                 - andps xmm0,xmm1
re5dx9.exe+78AEA7: F3 0F 59 05 58 E6 0B 01  - mulss xmm0,[re5dx9.exe+CBE658]
re5dx9.exe+78AEAF: 83 C0 FE                 - add eax,-02
re5dx9.exe+78AEB2: 83 F8 01                 - cmp eax,01
re5dx9.exe+78AEB5: F3 0F 11 44 24 50        - movss [esp+50],xmm0
re5dx9.exe+78AEBB: F3 0F 10 44 24 40        - movss xmm0,[esp+40]
re5dx9.exe+78AEC1: 77 08                    - ja re5dx9.exe+78AECB
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>64</ID>
          <Description>"[00B8B2E8] (7) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78B2E8)
define(bytes,8B 84 02 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[edx+eax+00000096]
  jmp 00B8B2EF

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[edx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78B2E8

re5dx9.exe+78B2B0: F3 0F 11 4C 24 34        - movss [esp+34],xmm1
re5dx9.exe+78B2B6: 0F 5A C0                 - cvtps2pd xmm0,xmm0
re5dx9.exe+78B2B9: E8 2D 80 2D 00           - call re5dx9.exe+A632EB
re5dx9.exe+78B2BE: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78B2C3: 8B 50 20                 - mov edx,[eax+20]
re5dx9.exe+78B2C6: 8B 0D 14 38 1A 01        - mov ecx,[re5dx9.exe+DA3814]
re5dx9.exe+78B2CC: 69 D2 74 8C 00 00        - imul edx,edx,00008C74
re5dx9.exe+78B2D2: F3 0F 10 8B E4 06 00 00  - movss xmm1,[ebx+000006E4]
re5dx9.exe+78B2DA: F3 0F 59 89 50 04 00 00  - mulss xmm1,[ecx+00000450]
re5dx9.exe+78B2E2: F3 0F 59 4C 24 3C        - mulss xmm1,[esp+3C]
// ---------- INJECTING HERE ----------
re5dx9.exe+78B2E8: 8B 84 02 9C 00 00 00     - mov eax,[edx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+78B2EF: F2 0F 5A C0              - cvtsd2ss xmm0,xmm0
re5dx9.exe+78B2F3: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+78B2F7: F3 0F 10 0D 30 E7 0B 01  - movss xmm1,[re5dx9.exe+CBE730]
re5dx9.exe+78B2FF: 0F 54 C1                 - andps xmm0,xmm1
re5dx9.exe+78B302: F3 0F 59 05 58 E6 0B 01  - mulss xmm0,[re5dx9.exe+CBE658]
re5dx9.exe+78B30A: 83 C0 FE                 - add eax,-02
re5dx9.exe+78B30D: 83 F8 01                 - cmp eax,01
re5dx9.exe+78B310: F3 0F 11 44 24 50        - movss [esp+50],xmm0
re5dx9.exe+78B316: F3 0F 10 44 24 40        - movss xmm0,[esp+40]
re5dx9.exe+78B31C: 77 08                    - ja re5dx9.exe+78B326
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>65</ID>
          <Description>"[00B8B45D] (8) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+78B45D)
define(bytes,8B 84 01 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000096]
  jmp 00B8B464

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+78B45D

re5dx9.exe+78B425: F3 0F 11 4C 24 4C        - movss [esp+4C],xmm1
re5dx9.exe+78B42B: 0F 5A C0                 - cvtps2pd xmm0,xmm0
re5dx9.exe+78B42E: E8 B8 7E 2D 00           - call re5dx9.exe+A632EB
re5dx9.exe+78B433: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78B438: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78B43B: 8B 15 14 38 1A 01        - mov edx,[re5dx9.exe+DA3814]
re5dx9.exe+78B441: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
re5dx9.exe+78B447: F3 0F 10 8B E4 06 00 00  - movss xmm1,[ebx+000006E4]
re5dx9.exe+78B44F: F3 0F 59 8A 50 04 00 00  - mulss xmm1,[edx+00000450]
re5dx9.exe+78B457: F3 0F 59 4C 24 3C        - mulss xmm1,[esp+3C]
// ---------- INJECTING HERE ----------
re5dx9.exe+78B45D: 8B 84 01 9C 00 00 00     - mov eax,[ecx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+78B464: F2 0F 5A C0              - cvtsd2ss xmm0,xmm0
re5dx9.exe+78B468: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+78B46C: F3 0F 10 0D 30 E7 0B 01  - movss xmm1,[re5dx9.exe+CBE730]
re5dx9.exe+78B474: 0F 54 C1                 - andps xmm0,xmm1
re5dx9.exe+78B477: F3 0F 59 05 58 E6 0B 01  - mulss xmm0,[re5dx9.exe+CBE658]
re5dx9.exe+78B47F: 83 C0 FE                 - add eax,-02
re5dx9.exe+78B482: 83 F8 01                 - cmp eax,01
re5dx9.exe+78B485: F3 0F 11 44 24 50        - movss [esp+50],xmm0
re5dx9.exe+78B48B: F3 0F 10 44 24 40        - movss xmm0,[esp+40]
re5dx9.exe+78B491: 77 08                    - ja re5dx9.exe+78B49B
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>66</ID>
          <Description>"[00B85D67] (9) Offset Change"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+785D67)
define(bytes,8B 84 01 9C 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx eax,[ecx+eax+00000096]
  jmp 00B85D6E

address:
  jmp newmem
  nop 2
return:

[DISABLE]

address:
  db bytes
  // mov eax,[ecx+eax+0000009C]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+785D67

re5dx9.exe+785D3B: 84 C0                    - test al,al
re5dx9.exe+785D3D: 74 14                    - je re5dx9.exe+785D53
re5dx9.exe+785D3F: F3 0F 10 44 24 14        - movss xmm0,[esp+14]
re5dx9.exe+785D45: F3 0F 58 44 24 30        - addss xmm0,[esp+30]
re5dx9.exe+785D4B: F3 0F 11 44 24 30        - movss [esp+30],xmm0
re5dx9.exe+785D51: EB 06                    - jmp re5dx9.exe+785D59
re5dx9.exe+785D53: F3 0F 10 44 24 30        - movss xmm0,[esp+30]
re5dx9.exe+785D59: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+785D5E: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+785D61: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+785D67: 8B 84 01 9C 00 00 00     - mov eax,[ecx+eax+0000009C]
// ---------- DONE INJECTING  ----------
re5dx9.exe+785D6E: 83 E8 01                 - sub eax,01
re5dx9.exe+785D71: 74 3E                    - je re5dx9.exe+785DB1
re5dx9.exe+785D73: 83 E8 01                 - sub eax,01
re5dx9.exe+785D76: 74 29                    - je re5dx9.exe+785DA1
re5dx9.exe+785D78: 83 E8 01                 - sub eax,01
re5dx9.exe+785D7B: 75 48                    - jne re5dx9.exe+785DC5
re5dx9.exe+785D7D: F3 0F 10 0D 64 E6 0B 01  - movss xmm1,[re5dx9.exe+CBE664]
re5dx9.exe+785D85: F3 0F 10 54 24 34        - movss xmm2,[esp+34]
re5dx9.exe+785D8B: F3 0F 59 C1              - mulss xmm0,xmm1
re5dx9.exe+785D8F: F3 0F 59 D1              - mulss xmm2,xmm1
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>68</ID>
      <Description>"[007B99E1] Swap Buttons Check Byte Change"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+3B99E1)
define(bytes,83 BC 01 A0 00 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [ecx+eax+00000097],00
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [ecx+eax+000000A0],00

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+3B99E1

re5dx9.exe+3B99B2: 74 D6                          - je re5dx9.exe+3B998A
re5dx9.exe+3B99B4: 8B 0D 28 AD 23 01              - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+3B99BA: E8 C1 45 FE FF                 - call re5dx9.exe+39DF80
re5dx9.exe+3B99BF: 84 C0                          - test al,al
re5dx9.exe+3B99C1: 0F 85 F9 03 00 00              - jne re5dx9.exe+3B9DC0
re5dx9.exe+3B99C7: 38 87 F8 02 00 00              - cmp [edi+000002F8],al
re5dx9.exe+3B99CD: 0F 84 ED 03 00 00              - je re5dx9.exe+3B9DC0
re5dx9.exe+3B99D3: A1 B8 31 1A 01                 - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+3B99D8: 8B 48 20                       - mov ecx,[eax+20]
re5dx9.exe+3B99DB: 69 C9 74 8C 00 00              - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+3B99E1: 83 BC 01 A0 00 00 00 00        - cmp dword ptr [ecx+eax+000000A0],00
// ---------- DONE INJECTING  ----------
re5dx9.exe+3B99E9: 75 16                          - jne re5dx9.exe+3B9A01
re5dx9.exe+3B99EB: C7 87 FC 02 00 00 01 00 00 00  - mov [edi+000002FC],00000001
re5dx9.exe+3B99F5: C7 87 00 03 00 00 02 00 00 00  - mov [edi+00000300],00000002
re5dx9.exe+3B99FF: EB 14                          - jmp re5dx9.exe+3B9A15
re5dx9.exe+3B9A01: C7 87 FC 02 00 00 02 00 00 00  - mov [edi+000002FC],00000002
re5dx9.exe+3B9A0B: C7 87 00 03 00 00 01 00 00 00  - mov [edi+00000300],00000001
re5dx9.exe+3B9A15: 8B 87 1C 03 00 00              - mov eax,[edi+0000031C]
re5dx9.exe+3B9A1B: 8B 0D 48 AD 23 01              - mov ecx,[re5dx9.exe+E3AD48]
re5dx9.exe+3B9A21: 6B C0 70                       - imul eax,eax,70
re5dx9.exe+3B9A24: 8B 54 08 20                    - mov edx,[eax+ecx+20]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>70</ID>
      <Description>"[00B89945] Item Menu Prioritization Check Byte Change"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-07
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+789945)
define(bytes,83 BC 01 A4 00 00 00 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp byte ptr [ecx+eax+00000098],01
return:

[DISABLE]

address:
  db bytes
  // cmp dword ptr [ecx+eax+000000A4],01

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+789945

re5dx9.exe+789916: 8B 15 28 AD 23 01        - mov edx,[re5dx9.exe+E3AD28]
re5dx9.exe+78991C: C6 82 FC 05 00 00 01     - mov byte ptr [edx+000005FC],01
re5dx9.exe+789923: 8B 0D 28 AD 23 01        - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+789929: C6 44 24 1B 00           - mov byte ptr [esp+1B],00
re5dx9.exe+78992E: E8 4D 46 C1 FF           - call re5dx9.exe+39DF80
re5dx9.exe+789933: 84 C0                    - test al,al
re5dx9.exe+789935: 75 1D                    - jne re5dx9.exe+789954
re5dx9.exe+789937: A1 B8 31 1A 01           - mov eax,[re5dx9.exe+DA31B8]
re5dx9.exe+78993C: 8B 48 20                 - mov ecx,[eax+20]
re5dx9.exe+78993F: 69 C9 74 8C 00 00        - imul ecx,ecx,00008C74
// ---------- INJECTING HERE ----------
re5dx9.exe+789945: 83 BC 01 A4 00 00 00 01  - cmp dword ptr [ecx+eax+000000A4],01
// ---------- DONE INJECTING  ----------
re5dx9.exe+78994D: 74 05                    - je re5dx9.exe+789954
re5dx9.exe+78994F: C6 44 24 1B 01           - mov byte ptr [esp+1B],01
re5dx9.exe+789954: 8B 7D 08                 - mov edi,[ebp+08]
re5dx9.exe+789957: 8A 54 24 1B              - mov dl,[esp+1B]
re5dx9.exe+78995B: 88 97 8A 2E 00 00        - mov [edi+00002E8A],dl
re5dx9.exe+789961: F3 0F 10 83 10 07 00 00  - movss xmm0,[ebx+00000710]
re5dx9.exe+789969: 0F 2F 05 8C 9E 04 01     - comiss xmm0,[re5dx9.exe+C49E8C]
re5dx9.exe+789970: 76 44                    - jna re5dx9.exe+7899B6
re5dx9.exe+789972: 8B 0D 28 AD 23 01        - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+789978: 6A 0C                    - push 0C
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>85</ID>
      <Description>"[00A2BB48] Writes Bindings to Temporary Save"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-09
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62BB48)
define(bytes,8B CE 89 BC 9E 90 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,edi
  mov [esi+ebx+00000190],cl
  mov ecx,esi
  jmp 00A2BB51

address:
  jmp newmem
  nop 4
return:

[DISABLE]

address:
  db bytes
  // mov ecx,esi
  // mov [esi+ebx*4+00000190],edi

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62BB48

re5dx9.exe+62BB33: 74 0F                          - je re5dx9.exe+62BB44
re5dx9.exe+62BB35: 83 FF 10                       - cmp edi,10
re5dx9.exe+62BB38: 75 0C                          - jne re5dx9.exe+62BB46
re5dx9.exe+62BB3A: 83 C7 01                       - add edi,01
re5dx9.exe+62BB3D: 83 FF 68                       - cmp edi,68
re5dx9.exe+62BB40: 7C DE                          - jl re5dx9.exe+62BB20
re5dx9.exe+62BB42: EB 27                          - jmp re5dx9.exe+62BB6B
re5dx9.exe+62BB44: 33 FF                          - xor edi,edi
re5dx9.exe+62BB46: 57                             - push edi
re5dx9.exe+62BB47: 53                             - push ebx
// ---------- INJECTING HERE ----------
re5dx9.exe+62BB48: 8B CE                          - mov ecx,esi
// ---------- DONE INJECTING  ----------
re5dx9.exe+62BB4A: 89 BC 9E 90 01 00 00           - mov [esi+ebx*4+00000190],edi
re5dx9.exe+62BB51: E8 6A D2 FF FF                 - call re5dx9.exe+628DC0
re5dx9.exe+62BB56: 8B CE                          - mov ecx,esi
re5dx9.exe+62BB58: E8 63 CE FB FF                 - call re5dx9.exe+5E89C0
re5dx9.exe+62BB5D: C7 86 F8 02 00 00 00 00 00 00  - mov [esi+000002F8],00000000
re5dx9.exe+62BB67: C6 46 14 02                    - mov byte ptr [esi+14],02
re5dx9.exe+62BB6B: 8B 0D 28 AD 23 01              - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+62BB71: E8 FA 37 D7 FF                 - call re5dx9.exe+39F370
re5dx9.exe+62BB76: 84 C0                          - test al,al
re5dx9.exe+62BB78: 75 12                          - jne re5dx9.exe+62BB8C
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>153</ID>
      <Description>"[00A263A0] Checks if Keybindings in Use"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-17
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6263A0)
define(bytes,8D 8E A4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  lea ecx,[esi+00000195]
loop:
  cmp ebp,eax
  je ignore
  test edx,edx
  je ignore
  cmp dl,[ecx]
  je 00A263BF
ignore:
  add eax,01
  add ecx,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp eax,2D
  jmp vocalizerOFF
vocalizerON:
  cmp eax,42
vocalizerOFF:
  jl loop
  jmp 00A263D5

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // lea ecx,[esi+000001A4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6263A0

re5dx9.exe+626373: 8B 44 24 20              - mov eax,[esp+20]
re5dx9.exe+626377: 0F B7 0C 45 A8 CF 11 01  - movzx ecx,word ptr [eax*2+re5dx9.exe+D1CFA8]
re5dx9.exe+62637F: EB C9                    - jmp re5dx9.exe+62634A
re5dx9.exe+626381: 83 BE F8 02 00 00 00     - cmp dword ptr [esi+000002F8],00
re5dx9.exe+626388: 74 0D                    - je re5dx9.exe+626397
re5dx9.exe+62638A: 8B 44 24 1C              - mov eax,[esp+1C]
re5dx9.exe+62638E: 3B 46 44                 - cmp eax,[esi+44]
re5dx9.exe+626391: 0F 84 57 04 00 00        - je re5dx9.exe+6267EE
re5dx9.exe+626397: 8B 54 24 20              - mov edx,[esp+20]
re5dx9.exe+62639B: B8 05 00 00 00           - mov eax,00000005
// ---------- INJECTING HERE ----------
re5dx9.exe+6263A0: 8D 8E A4 01 00 00        - lea ecx,[esi+000001A4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6263A6: 3B E8                    - cmp ebp,eax
re5dx9.exe+6263A8: 74 08                    - je re5dx9.exe+6263B2
re5dx9.exe+6263AA: 85 D2                    - test edx,edx
re5dx9.exe+6263AC: 74 04                    - je re5dx9.exe+6263B2
re5dx9.exe+6263AE: 3B 11                    - cmp edx,[ecx]
re5dx9.exe+6263B0: 74 0D                    - je re5dx9.exe+6263BF
re5dx9.exe+6263B2: 83 C0 01                 - add eax,01
re5dx9.exe+6263B5: 83 C1 04                 - add ecx,04
re5dx9.exe+6263B8: 83 F8 2D                 - cmp eax,2D
re5dx9.exe+6263BB: 7C E9                    - jl re5dx9.exe+6263A6
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>90</ID>
      <Description>"[00A26681] Checks Move Forward Keybinding to Match Run Key"</Description>
      <LastState Activated="1"/>
      <Color>0000FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-09
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+626681)
define(bytes,8B 86 A4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  lea ebp,[esi+00000195]
  movzx eax,byte ptr[ebp]
  jmp 00A2668D

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov eax,[esi+000001A4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+626681

re5dx9.exe+626663: 74 0C                    - je re5dx9.exe+626671
re5dx9.exe+626665: 85 ED                    - test ebp,ebp
re5dx9.exe+626667: 74 08                    - je re5dx9.exe+626671
re5dx9.exe+626669: 3B 2A                    - cmp ebp,[edx]
re5dx9.exe+62666B: 0F 84 D2 FE FF FF        - je re5dx9.exe+626543
re5dx9.exe+626671: 83 C1 01                 - add ecx,01
re5dx9.exe+626674: 83 C2 04                 - add edx,04
re5dx9.exe+626677: 83 F9 2D                 - cmp ecx,2D
re5dx9.exe+62667A: 7C E4                    - jl re5dx9.exe+626660
re5dx9.exe+62667C: E9 DE FE FF FF           - jmp re5dx9.exe+62655F
// ---------- INJECTING HERE ----------
re5dx9.exe+626681: 8B 86 A4 01 00 00        - mov eax,[esi+000001A4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+626687: 8D AE A4 01 00 00        - lea ebp,[esi+000001A4]
re5dx9.exe+62668D: 50                       - push eax
re5dx9.exe+62668E: 89 44 24 30              - mov [esp+30],eax
re5dx9.exe+626692: E8 59 83 D7 FF           - call re5dx9.exe+39E9F0
re5dx9.exe+626697: 85 C0                    - test eax,eax
re5dx9.exe+626699: 89 44 24 30              - mov [esp+30],eax
re5dx9.exe+62669D: 0F 84 99 00 00 00        - je re5dx9.exe+62673C
re5dx9.exe+6266A3: 8B 44 24 14              - mov eax,[esp+14]
re5dx9.exe+6266A7: 89 44 24 18              - mov [esp+18],eax
re5dx9.exe+6266AB: C7 44 24 28 05 00 00 00  - mov [esp+28],00000005
}
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>102</ID>
          <Description>"[00A266C2] Change Cmp to 1 Byte Check"</Description>
          <LastState Activated="1"/>
          <Color>0000FF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-09
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6266C2)
define(bytes,3B 4D 00 74 42)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:

address:
  cmp cl,[ebp+00]
  je 00A26709
return:

[DISABLE]

address:
  db bytes
  // cmp ecx,[ebp+00]
  // je re5dx9.exe+626709

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6266C2

re5dx9.exe+626699: 89 44 24 30              - mov [esp+30],eax
re5dx9.exe+62669D: 0F 84 99 00 00 00        - je re5dx9.exe+62673C
re5dx9.exe+6266A3: 8B 44 24 14              - mov eax,[esp+14]
re5dx9.exe+6266A7: 89 44 24 18              - mov [esp+18],eax
re5dx9.exe+6266AB: C7 44 24 28 05 00 00 00  - mov [esp+28],00000005
re5dx9.exe+6266B3: 83 7C 24 28 05           - cmp dword ptr [esp+28],05
re5dx9.exe+6266B8: 74 0D                    - je re5dx9.exe+6266C7
re5dx9.exe+6266BA: 8B 4C 24 2C              - mov ecx,[esp+2C]
re5dx9.exe+6266BE: 85 C9                    - test ecx,ecx
re5dx9.exe+6266C0: 74 05                    - je re5dx9.exe+6266C7
// ---------- INJECTING HERE ----------
re5dx9.exe+6266C2: 3B 4D 00                 - cmp ecx,[ebp+00]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6266C5: 74 42                    - je re5dx9.exe+626709
re5dx9.exe+6266C7: 8B 54 24 1C              - mov edx,[esp+1C]
re5dx9.exe+6266CB: 3B 56 44                 - cmp edx,[esi+44]
re5dx9.exe+6266CE: 6A 00                    - push 00
re5dx9.exe+6266D0: 68 FF 00 00 00           - push 000000FF
re5dx9.exe+6266D5: 75 09                    - jne re5dx9.exe+6266E0
re5dx9.exe+6266D7: 6A 01                    - push 01
re5dx9.exe+6266D9: 8D 44 24 44              - lea eax,[esp+44]
re5dx9.exe+6266DD: 50                       - push eax
re5dx9.exe+6266DE: EB 07                    - jmp re5dx9.exe+6266E7
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>157</ID>
          <Description>"[00A266F7] Loops for Check"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-17
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6266F7)
define(bytes,83 C5 04 83 F9 2D)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add ebp,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp 00A266FD
vocalizerON:
  cmp ecx,42
  jmp 00A266FD

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // add ebp,04
  // cmp ecx,2D

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6266F7

re5dx9.exe+6266DD: 50              - push eax
re5dx9.exe+6266DE: EB 07           - jmp re5dx9.exe+6266E7
re5dx9.exe+6266E0: 6A 00           - push 00
re5dx9.exe+6266E2: 8D 4C 24 48     - lea ecx,[esp+48]
re5dx9.exe+6266E6: 51              - push ecx
re5dx9.exe+6266E7: 8B CE           - mov ecx,esi
re5dx9.exe+6266E9: E8 02 39 FF FF  - call re5dx9.exe+619FF0
re5dx9.exe+6266EE: 8B 4C 24 28     - mov ecx,[esp+28]
re5dx9.exe+6266F2: 8B 00           - mov eax,[eax]
re5dx9.exe+6266F4: 83 C1 01        - add ecx,01
// ---------- INJECTING HERE ----------
re5dx9.exe+6266F7: 83 C5 04        - add ebp,04
// ---------- DONE INJECTING  ----------
re5dx9.exe+6266FA: 83 F9 2D        - cmp ecx,2D
re5dx9.exe+6266FD: 89 44 24 18     - mov [esp+18],eax
re5dx9.exe+626701: 89 4C 24 28     - mov [esp+28],ecx
re5dx9.exe+626705: 7C AC           - jl re5dx9.exe+6266B3
re5dx9.exe+626707: EB 17           - jmp re5dx9.exe+626720
re5dx9.exe+626709: 8B 54 24 1C     - mov edx,[esp+1C]
re5dx9.exe+62670D: 25 00 00 FF FF  - and eax,FFFF0000
re5dx9.exe+626712: 3B 56 44        - cmp edx,[esi+44]
re5dx9.exe+626715: 89 44 24 18     - mov [esp+18],eax
re5dx9.exe+626719: 75 05           - jne re5dx9.exe+626720
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>105</ID>
      <Description>"[00A2658B] Quickturn Move Back Key Binding Check"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-09
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62658B)
define(bytes,8B AE A8 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+00000196]
  push edx
  call 0079E9F0
  test eax,eax
  mov [esp+28],eax
  je 00A265FF
  mov eax,[esp+14]
  mov [esp+18],eax
  mov ecx,00000005
  lea ebp,[esi+00000195]
loop:
  cmp ecx,06
  je ignore
  test edx,edx
  je ignore
  cmp dl,[ebp]
  je 00A265CC
ignore:
  add ecx,01
  add ebp,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A265E3

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov ebp,[esi+000001A8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62658B

re5dx9.exe+626568: 68 5E 03 00 00     - push 0000035E
re5dx9.exe+62656D: 57                 - push edi
re5dx9.exe+62656E: 8B CE              - mov ecx,esi
re5dx9.exe+626570: E8 EB 18 FC FF     - call re5dx9.exe+5E7E60
re5dx9.exe+626575: E9 74 02 00 00     - jmp re5dx9.exe+6267EE
re5dx9.exe+62657A: 6A 60              - push 60
re5dx9.exe+62657C: 68 74 25 F5 00     - push re5dx9.exe+B52574
re5dx9.exe+626581: 8D 4C 24 1C        - lea ecx,[esp+1C]
re5dx9.exe+626585: 51                 - push ecx
re5dx9.exe+626586: E9 55 02 00 00     - jmp re5dx9.exe+6267E0
// ---------- INJECTING HERE ----------
re5dx9.exe+62658B: 8B AE A8 01 00 00  - mov ebp,[esi+000001A8]
// ---------- DONE INJECTING  ----------
re5dx9.exe+626591: 55                 - push ebp
re5dx9.exe+626592: E8 59 84 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+626597: 85 C0              - test eax,eax
re5dx9.exe+626599: 89 44 24 28        - mov [esp+28],eax
re5dx9.exe+62659D: 74 60              - je re5dx9.exe+6265FF
re5dx9.exe+62659F: 8B 44 24 14        - mov eax,[esp+14]
re5dx9.exe+6265A3: 89 44 24 18        - mov [esp+18],eax
re5dx9.exe+6265A7: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+6265AC: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+6265B2: 83 F9 06           - cmp ecx,06
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>106</ID>
      <Description>"[00A26633] Shift Key Binding Checker"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-09
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+626633)
define(bytes,8B AE B4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+00000199]
  mov ecx,[0123AD28]
  push edx
  call 0079E9F0
  test eax,eax
  je 00A2657A
  mov ecx,[esp+14]
  mov [esp+18],ecx
  mov ecx,00000005
  lea ebp,[esi+00000195]
loop:
  cmp ecx,09
  je ignore
  test edx,edx
  je ignore
  cmp dl,[ebp]
  je 00A26543
ignore:
  add ecx,01
  add ebp,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A2655F

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov ebp,[esi+000001B4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+626633

re5dx9.exe+626614: E8 17 1A FC FF     - call re5dx9.exe+5E8030
re5dx9.exe+626619: 6A 60              - push 60
re5dx9.exe+62661B: 68 30 3B 0B 01     - push re5dx9.exe+CB3B30
re5dx9.exe+626620: 8D 44 24 1C        - lea eax,[esp+1C]
re5dx9.exe+626624: 50                 - push eax
re5dx9.exe+626625: 53                 - push ebx
re5dx9.exe+626626: 68 3E 03 00 00     - push 0000033E
re5dx9.exe+62662B: 57                 - push edi
re5dx9.exe+62662C: 8B CE              - mov ecx,esi
re5dx9.exe+62662E: E8 FD 19 FC FF     - call re5dx9.exe+5E8030
// ---------- INJECTING HERE ----------
re5dx9.exe+626633: 8B AE B4 01 00 00  - mov ebp,[esi+000001B4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+626639: 8B 0D 28 AD 23 01  - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+62663F: 55                 - push ebp
re5dx9.exe+626640: E8 AB 83 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+626645: 85 C0              - test eax,eax
re5dx9.exe+626647: 0F 84 2D FF FF FF  - je re5dx9.exe+62657A
re5dx9.exe+62664D: 8B 4C 24 14        - mov ecx,[esp+14]
re5dx9.exe+626651: 89 4C 24 18        - mov [esp+18],ecx
re5dx9.exe+626655: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+62665A: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+626660: 83 F9 09           - cmp ecx,09
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>109</ID>
      <Description>"[00A26437] Reload Ready Weapon Binding Check"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-10
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+626437)
define(bytes,8B AE D4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+000001A1]
  push edx
  call 0079E9F0
  test eax,eax
  mov [esp+28],eax
  je 00A264AD
  mov eax,[esp+14]
  mov [esp+18],eax
  mov ecx,00000005
  lea ebp,[esi+00000195]
loop:
  cmp ecx,11
  je ignore
  test edx,edx
  je ignore
  cmp dl,[ebp]
  je 00A2647A
ignore:
  add ecx,01
  add edx,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A26491

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov ebp,[esi+000001D4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+626437

re5dx9.exe+626415: 57                 - push edi
re5dx9.exe+626416: 8B CE              - mov ecx,esi
re5dx9.exe+626418: E8 43 1A FC FF     - call re5dx9.exe+5E7E60
re5dx9.exe+62641D: E9 CC 03 00 00     - jmp re5dx9.exe+6267EE
re5dx9.exe+626422: 68 74 25 F5 00     - push re5dx9.exe+B52574
re5dx9.exe+626427: 8D 4C 24 1C        - lea ecx,[esp+1C]
re5dx9.exe+62642B: 51                 - push ecx
re5dx9.exe+62642C: 53                 - push ebx
re5dx9.exe+62642D: 68 3E 03 00 00     - push 0000033E
re5dx9.exe+626432: E9 AF 03 00 00     - jmp re5dx9.exe+6267E6
// ---------- INJECTING HERE ----------
re5dx9.exe+626437: 8B AE D4 01 00 00  - mov ebp,[esi+000001D4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+62643D: 55                 - push ebp
re5dx9.exe+62643E: E8 AD 85 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+626443: 85 C0              - test eax,eax
re5dx9.exe+626445: 89 44 24 28        - mov [esp+28],eax
re5dx9.exe+626449: 74 62              - je re5dx9.exe+6264AD
re5dx9.exe+62644B: 8B 44 24 14        - mov eax,[esp+14]
re5dx9.exe+62644F: 89 44 24 18        - mov [esp+18],eax
re5dx9.exe+626453: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+626458: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+62645E: 8B FF              - mov edi,edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>110</ID>
      <Description>"[00A264E1] Shift Key Binding Checker"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-10
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6264E1)
define(bytes,8B AE B4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+00000199]
  mov ecx,[0123AD28]
  push edx
  call 0079E9F0
  test eax,eax
  je 00A2657A
  mov ecx,[esp+14]
  mov [esp+18],ecx
  mov ecx,00000005
  lea ebp,[esi+00000195]
loop:
  cmp ecx,09
  je ignore
  test edx,edx
  je ignore
  cmp dl,[ebp]
  je 00A26543
ignore:
  add ecx,01
  add ebp,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A26528

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov ebp,[esi+000001B4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6264E1

re5dx9.exe+6264C2: E8 69 1B FC FF     - call re5dx9.exe+5E8030
re5dx9.exe+6264C7: 6A 60              - push 60
re5dx9.exe+6264C9: 68 30 3B 0B 01     - push re5dx9.exe+CB3B30
re5dx9.exe+6264CE: 8D 44 24 1C        - lea eax,[esp+1C]
re5dx9.exe+6264D2: 50                 - push eax
re5dx9.exe+6264D3: 53                 - push ebx
re5dx9.exe+6264D4: 68 3E 03 00 00     - push 0000033E
re5dx9.exe+6264D9: 57                 - push edi
re5dx9.exe+6264DA: 8B CE              - mov ecx,esi
re5dx9.exe+6264DC: E8 4F 1B FC FF     - call re5dx9.exe+5E8030
// ---------- INJECTING HERE ----------
re5dx9.exe+6264E1: 8B AE B4 01 00 00  - mov ebp,[esi+000001B4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6264E7: 8B 0D 28 AD 23 01  - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+6264ED: 55                 - push ebp
re5dx9.exe+6264EE: E8 FD 84 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+6264F3: 85 C0              - test eax,eax
re5dx9.exe+6264F5: 0F 84 7F 00 00 00  - je re5dx9.exe+62657A
re5dx9.exe+6264FB: 8B 4C 24 14        - mov ecx,[esp+14]
re5dx9.exe+6264FF: 89 4C 24 18        - mov [esp+18],ecx
re5dx9.exe+626503: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+626508: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+62650E: 8B FF              - mov edi,edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>158</ID>
      <Description>"[00A2B8D3] Slot Limit Change"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-17
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62B8D3)
define(bytes,6A 2D 51 57 55)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  push 2D
  jmp vocalizerOFF
vocalizerON:
  push 42
vocalizerOFF:
  push ecx
  push edi
  push ebp
  jmp 00A2B8D8

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // push 2D
  // push ecx
  // push edi
  // push ebp

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62B8D3

re5dx9.exe+62B8B5: 6A 00              - push 00
re5dx9.exe+62B8B7: 6A 5A              - push 5A
re5dx9.exe+62B8B9: E8 F2 26 D7 FF     - call re5dx9.exe+39DFB0
re5dx9.exe+62B8BE: 84 C0              - test al,al
re5dx9.exe+62B8C0: 0F 85 8D 01 00 00  - jne re5dx9.exe+62BA53
re5dx9.exe+62B8C6: 8B 4E 44           - mov ecx,[esi+44]
re5dx9.exe+62B8C9: 8B 56 4C           - mov edx,[esi+4C]
re5dx9.exe+62B8CC: 6A 07              - push 07
re5dx9.exe+62B8CE: 8D 44 24 18        - lea eax,[esp+18]
re5dx9.exe+62B8D2: 50                 - push eax
// ---------- INJECTING HERE ----------
re5dx9.exe+62B8D3: 6A 2D              - push 2D
// ---------- DONE INJECTING  ----------
re5dx9.exe+62B8D5: 51                 - push ecx
re5dx9.exe+62B8D6: 57                 - push edi
re5dx9.exe+62B8D7: 55                 - push ebp
re5dx9.exe+62B8D8: 8B CE              - mov ecx,esi
re5dx9.exe+62B8DA: 89 54 24 2C        - mov [esp+2C],edx
re5dx9.exe+62B8DE: E8 6D B6 FB FF     - call re5dx9.exe+5E6F50
re5dx9.exe+62B8E3: 8B 0D 24 31 1A 01  - mov ecx,[re5dx9.exe+DA3124]
re5dx9.exe+62B8E9: 6A 00              - push 00
re5dx9.exe+62B8EB: 6A 00              - push 00
re5dx9.exe+62B8ED: 6A 07              - push 07
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>159</ID>
      <Description>"[00A2B905] Scroll Limit Change"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-17
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62B905)
define(bytes,6A 26 6A 00 52)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  push 26
  jmp vocalizerOFF
vocalizerON:
  push 3B
vocalizerOFF:
  push 00
  push edx
  jmp 00A2B90A

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // push 26
  // push 00
  // push edx

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62B905

re5dx9.exe+62B8E9: 6A 00              - push 00
re5dx9.exe+62B8EB: 6A 00              - push 00
re5dx9.exe+62B8ED: 6A 07              - push 07
re5dx9.exe+62B8EF: 50                 - push eax
re5dx9.exe+62B8F0: E8 DB DC D8 FF     - call re5dx9.exe+3B95D0
re5dx9.exe+62B8F5: 8B 54 24 14        - mov edx,[esp+14]
re5dx9.exe+62B8F9: 8B 0D 24 31 1A 01  - mov ecx,[re5dx9.exe+DA3124]
re5dx9.exe+62B8FF: 6A 02              - push 02
re5dx9.exe+62B901: 6A 01              - push 01
re5dx9.exe+62B903: 6A 00              - push 00
// ---------- INJECTING HERE ----------
re5dx9.exe+62B905: 6A 26              - push 26
// ---------- DONE INJECTING  ----------
re5dx9.exe+62B907: 6A 00              - push 00
re5dx9.exe+62B909: 52                 - push edx
re5dx9.exe+62B90A: 8B F8              - mov edi,eax
re5dx9.exe+62B90C: E8 CF DD D8 FF     - call re5dx9.exe+3B96E0
re5dx9.exe+62B911: 8B 4E 44           - mov ecx,[esi+44]
re5dx9.exe+62B914: 3B CF              - cmp ecx,edi
re5dx9.exe+62B916: 89 44 24 14        - mov [esp+14],eax
re5dx9.exe+62B91A: 0F 85 17 01 00 00  - jne re5dx9.exe+62BA37
re5dx9.exe+62B920: 8B 56 4C           - mov edx,[esi+4C]
re5dx9.exe+62B923: 3B D0              - cmp edx,eax
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>160</ID>
      <Description>"[00A268C9] Arrow Down Limit"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-17
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6268C9)
define(bytes,83 FF 26 7D 15)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp edi,26
  jmp vocalizerOFF
vocalizerON:
  cmp edi,3B
vocalizerOFF:
  jnl 00A268E3
  jmp 00A268CE

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // cmp edi,26
  // jnl re5dx9.exe+6268E3

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6268C9

re5dx9.exe+6268A6: 5D                       - pop ebp
re5dx9.exe+6268A7: 7E 20                    - jle re5dx9.exe+6268C9
re5dx9.exe+6268A9: 8B 46 20                 - mov eax,[esi+20]
re5dx9.exe+6268AC: 0F BF 0C 45 C8 D1 11 01  - movsx ecx,word ptr [eax*2+re5dx9.exe+D1D1C8]
re5dx9.exe+6268B4: 83 C1 19                 - add ecx,19
re5dx9.exe+6268B7: 51                       - push ecx
re5dx9.exe+6268B8: 68 3E 03 00 00           - push 0000033E
re5dx9.exe+6268BD: 68 30 85 FA 00           - push re5dx9.exe+BA8530
re5dx9.exe+6268C2: 8B CE                    - mov ecx,esi
re5dx9.exe+6268C4: E8 87 26 FC FF           - call re5dx9.exe+5E8F50
// ---------- INJECTING HERE ----------
re5dx9.exe+6268C9: 83 FF 26                 - cmp edi,26
// ---------- DONE INJECTING  ----------
re5dx9.exe+6268CC: 7D 15                    - jnl re5dx9.exe+6268E3
re5dx9.exe+6268CE: 8D 53 F6                 - lea edx,[ebx-0A]
re5dx9.exe+6268D1: 52                       - push edx
re5dx9.exe+6268D2: 68 3E 03 00 00           - push 0000033E
re5dx9.exe+6268D7: 68 28 85 FA 00           - push re5dx9.exe+BA8528
re5dx9.exe+6268DC: 8B CE                    - mov ecx,esi
re5dx9.exe+6268DE: E8 6D 26 FC FF           - call re5dx9.exe+5E8F50
re5dx9.exe+6268E3: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+6268E6: 8B 4E 44                 - mov ecx,[esi+44]
re5dx9.exe+6268E9: 03 5C 24 30              - add ebx,[esp+30]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>150</ID>
      <Description>"[00A268EF] Binding Description Optimization"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-16
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6268EF)
define(bytes,0F B7 04 4D A8 D0 11 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp ecx,4
  jbe ignore
  mov ecx,5
ignore:
  movzx eax,word ptr [ecx*2+0111D0A8]
  test ecx,ecx
  jmp 00A268F7

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movzx eax,word ptr [ecx*2+re5dx9.exe+D1D0A8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6268EF

re5dx9.exe+6268CE: 8D 53 F6                 - lea edx,[ebx-0A]
re5dx9.exe+6268D1: 52                       - push edx
re5dx9.exe+6268D2: 68 3E 03 00 00           - push 0000033E
re5dx9.exe+6268D7: 68 28 85 FA 00           - push re5dx9.exe+BA8528
re5dx9.exe+6268DC: 8B CE                    - mov ecx,esi
re5dx9.exe+6268DE: E8 6D 26 FC FF           - call re5dx9.exe+5E8F50
re5dx9.exe+6268E3: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+6268E6: 8B 4E 44                 - mov ecx,[esi+44]
re5dx9.exe+6268E9: 03 5C 24 30              - add ebx,[esp+30]
re5dx9.exe+6268ED: 03 C8                    - add ecx,eax
// ---------- INJECTING HERE ----------
re5dx9.exe+6268EF: 0F B7 04 4D A8 D0 11 01  - movzx eax,word ptr [ecx*2+re5dx9.exe+D1D0A8]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6268F7: 75 10                    - jne re5dx9.exe+626909
re5dx9.exe+6268F9: 8B 86 90 01 00 00        - mov eax,[esi+00000190]
re5dx9.exe+6268FF: EB 03                    - jmp re5dx9.exe+626904
re5dx9.exe+626901: 90                       - nop 
re5dx9.exe+626902: 90                       - nop 
re5dx9.exe+626903: 90                       - nop 
re5dx9.exe+626904: 05 18 09 00 00           - add eax,00000918
re5dx9.exe+626909: 83 BE F8 02 00 00 01     - cmp dword ptr [esi+000002F8],01
re5dx9.exe+626910: 75 0E                    - jne re5dx9.exe+626920
re5dx9.exe+626912: 3D F2 08 00 00           - cmp eax,000008F2
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>152</ID>
      <Description>"[00A262B8] New Option Names"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-16
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6262B8)
define(bytes,0F B7 04 6D 28 CF 11 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp ebp,2C
  ja newNames
  movzx eax,word ptr [ebp*2+0111CF28]
  jmp 00A262C0
newNames:
  sub ebp,2D
  movzx eax,word ptr [ebp*2+0111D0B4]
  add ebp,2D
  jmp 00A262C0

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movzx eax,word ptr [ebp*2+re5dx9.exe+D1CF28]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6262B8

re5dx9.exe+626296: 74 0A                    - je re5dx9.exe+6262A2
re5dx9.exe+626298: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+62629B: 03 C1                    - add eax,ecx
re5dx9.exe+62629D: 83 F8 17                 - cmp eax,17
re5dx9.exe+6262A0: 75 16                    - jne re5dx9.exe+6262B8
re5dx9.exe+6262A2: 39 4C 24 1C              - cmp [esp+1C],ecx
re5dx9.exe+6262A6: 75 10                    - jne re5dx9.exe+6262B8
re5dx9.exe+6262A8: 81 E2 66 66 66 FF        - and edx,FF666666
re5dx9.exe+6262AE: 81 CA 66 66 66 00        - or edx,re5dx9.exe+266666
re5dx9.exe+6262B4: 89 54 24 14              - mov [esp+14],edx
// ---------- INJECTING HERE ----------
re5dx9.exe+6262B8: 0F B7 04 6D 28 CF 11 01  - movzx eax,word ptr [ebp*2+re5dx9.exe+D1CF28]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6262C0: 6A 60                    - push 60
re5dx9.exe+6262C2: 50                       - push eax
re5dx9.exe+6262C3: 8D 4C 24 1C              - lea ecx,[esp+1C]
re5dx9.exe+6262C7: 51                       - push ecx
re5dx9.exe+6262C8: 53                       - push ebx
re5dx9.exe+6262C9: 68 7C 01 00 00           - push 0000017C
re5dx9.exe+6262CE: 57                       - push edi
re5dx9.exe+6262CF: 8B CE                    - mov ecx,esi
re5dx9.exe+6262D1: E8 8A 1B FC FF           - call re5dx9.exe+5E7E60
re5dx9.exe+6262D6: 83 FD 04                 - cmp ebp,04
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>123</ID>
      <Description>"[00A293DD] Main Menu Checks if Keybindings in Use"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-11
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6293DD)
define(bytes,B8 05 00 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov eax,00000005
  mov ecx,ebp
  lea edx,[esi+00000195]
loop:
  cmp edi,eax
  je ignore
  test ecx,ecx
  je ignore
  cmp cl,[edx]
  je 00A29401
ignore:
  add al,01
  add edx,1
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp al,2D
  jmp vocalizerOFF
vocalizerON:
  cmp al,42
vocalizerOFF:
  jl loop
  jmp 00A29417

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // mov eax,00000005

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6293DD

re5dx9.exe+6293B3: 8B CE                 - mov ecx,esi
re5dx9.exe+6293B5: E8 46 0F FF FF        - call re5dx9.exe+61A300
re5dx9.exe+6293BA: E9 72 04 00 00        - jmp re5dx9.exe+629831
re5dx9.exe+6293BF: 83 BE F8 02 00 00 00  - cmp dword ptr [esi+000002F8],00
re5dx9.exe+6293C6: 74 15                 - je re5dx9.exe+6293DD
re5dx9.exe+6293C8: 8B 54 24 20           - mov edx,[esp+20]
re5dx9.exe+6293CC: 3B 56 44              - cmp edx,[esi+44]
re5dx9.exe+6293CF: 0F 84 55 04 00 00     - je re5dx9.exe+62982A
re5dx9.exe+6293D5: 8B 6C 24 28           - mov ebp,[esp+28]
re5dx9.exe+6293D9: 8B 5C 24 24           - mov ebx,[esp+24]
// ---------- INJECTING HERE ----------
re5dx9.exe+6293DD: B8 05 00 00 00        - mov eax,00000005
// ---------- DONE INJECTING  ----------
re5dx9.exe+6293E2: 8D 8E A4 01 00 00     - lea ecx,[esi+000001A4]
re5dx9.exe+6293E8: 3B F8                 - cmp edi,eax
re5dx9.exe+6293EA: 74 08                 - je re5dx9.exe+6293F4
re5dx9.exe+6293EC: 85 ED                 - test ebp,ebp
re5dx9.exe+6293EE: 74 04                 - je re5dx9.exe+6293F4
re5dx9.exe+6293F0: 3B 29                 - cmp ebp,[ecx]
re5dx9.exe+6293F2: 74 0D                 - je re5dx9.exe+629401
re5dx9.exe+6293F4: 83 C0 01              - add eax,01
re5dx9.exe+6293F7: 83 C1 04              - add ecx,04
re5dx9.exe+6293FA: 83 F8 2D              - cmp eax,2D
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>119</ID>
      <Description>"[00A296B3] Main Menu Checks Move Forward Keybinding to Match Run Key"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-11
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6296B3)
define(bytes,8B 9E A4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx ebx,byte ptr[esi+00000195]
  push ebx
  call 0079E9F0
  test eax,eax
  mov [esp+2C],eax
  je 00A29764
  mov eax,[esp+14]
  mov [esp+1C],eax
  mov edi,00000005
  lea ebp,[esi+00000195]
  mov edi,edi
  cmp edi,05
  je ignore
  test ebx,ebx
  je ignore
  cmp bl,[ebp+00]
  je 00A29728
ignore:
  jmp 00A296EE

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov ebx,[esi+000001A4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6296B3

re5dx9.exe+629695: 74 0C              - je re5dx9.exe+6296A3
re5dx9.exe+629697: 85 FF              - test edi,edi
re5dx9.exe+629699: 74 08              - je re5dx9.exe+6296A3
re5dx9.exe+62969B: 3B 3A              - cmp edi,[edx]
re5dx9.exe+62969D: 0F 84 C7 FE FF FF  - je re5dx9.exe+62956A
re5dx9.exe+6296A3: 83 C1 01           - add ecx,01
re5dx9.exe+6296A6: 83 C2 04           - add edx,04
re5dx9.exe+6296A9: 83 F9 2D           - cmp ecx,2D
re5dx9.exe+6296AC: 7C E4              - jl re5dx9.exe+629692
re5dx9.exe+6296AE: E9 CF FE FF FF     - jmp re5dx9.exe+629582
// ---------- INJECTING HERE ----------
re5dx9.exe+6296B3: 8B 9E A4 01 00 00  - mov ebx,[esi+000001A4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6296B9: 53                 - push ebx
re5dx9.exe+6296BA: E8 31 53 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+6296BF: 85 C0              - test eax,eax
re5dx9.exe+6296C1: 89 44 24 2C        - mov [esp+2C],eax
re5dx9.exe+6296C5: 0F 84 99 00 00 00  - je re5dx9.exe+629764
re5dx9.exe+6296CB: 8B 44 24 14        - mov eax,[esp+14]
re5dx9.exe+6296CF: 89 44 24 1C        - mov [esp+1C],eax
re5dx9.exe+6296D3: BF 05 00 00 00     - mov edi,00000005
re5dx9.exe+6296D8: 8D AE A4 01 00 00  - lea ebp,[esi+000001A4]
re5dx9.exe+6296DE: 8B FF              - mov edi,edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>162</ID>
      <Description>"[00A2971A] Match Key Loop"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+62971A)
define(bytes,83 C5 04 83 FF 2D)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  add ebp,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp edi,2D
  jmp vocalizerOFF
vocalizerON:
  cmp edi,42
vocalizerOFF:
  jmp 00A29720

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // add ebp,04
  // cmp edi,2D

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+62971A

re5dx9.exe+629700: 8D 4C 24 44     - lea ecx,[esp+44]
re5dx9.exe+629704: 51              - push ecx
re5dx9.exe+629705: EB 07           - jmp re5dx9.exe+62970E
re5dx9.exe+629707: 6A 00           - push 00
re5dx9.exe+629709: 8D 54 24 48     - lea edx,[esp+48]
re5dx9.exe+62970D: 52              - push edx
re5dx9.exe+62970E: 8B CE           - mov ecx,esi
re5dx9.exe+629710: E8 DB 08 FF FF  - call re5dx9.exe+619FF0
re5dx9.exe+629715: 8B 00           - mov eax,[eax]
re5dx9.exe+629717: 83 C7 01        - add edi,01
// ---------- INJECTING HERE ----------
re5dx9.exe+62971A: 83 C5 04        - add ebp,04
// ---------- DONE INJECTING  ----------
re5dx9.exe+62971D: 83 FF 2D        - cmp edi,2D
re5dx9.exe+629720: 89 44 24 1C     - mov [esp+1C],eax
re5dx9.exe+629724: 7C BA           - jl re5dx9.exe+6296E0
re5dx9.exe+629726: EB 17           - jmp re5dx9.exe+62973F
re5dx9.exe+629728: 25 00 00 FF FF  - and eax,FFFF0000
re5dx9.exe+62972D: 89 44 24 1C     - mov [esp+1C],eax
re5dx9.exe+629731: 8B 44 24 20     - mov eax,[esp+20]
re5dx9.exe+629735: 3B 46 44        - cmp eax,[esi+44]
re5dx9.exe+629738: 75 05           - jne re5dx9.exe+62973F
re5dx9.exe+62973A: C6 44 24 13 01  - mov byte ptr [esp+13],01
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>124</ID>
      <Description>"[00A295B5] Main Menu Quickturn Move Back Key Binding Check"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-11
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6295B5)
define(bytes,8B BE A8 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+00000196]
  push edx
  call 0079E9F0
  test eax,eax
  je 00A29627
  mov ebp,[esp+14]
  mov [esp+1C],ebp
  mov ecx,00000005
  lea edi,[esi+00000195]
loop:
  cmp ecx,06
  je ignore
  test edx,edx
  je ignore
  cmp dl,[edi]
  je 00A295F2
ignore:
  add ecx,01
  add edi,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A2960A

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov edi,[esi+000001A8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6295B5

re5dx9.exe+629596: 8B CE              - mov ecx,esi
re5dx9.exe+629598: E8 63 0D FF FF     - call re5dx9.exe+61A300
re5dx9.exe+62959D: E9 88 02 00 00     - jmp re5dx9.exe+62982A
re5dx9.exe+6295A2: D9 44 24 18        - fld dword ptr [esp+18]
re5dx9.exe+6295A6: 51                 - push ecx
re5dx9.exe+6295A7: D9 1C 24           - fstp dword ptr [esp]
re5dx9.exe+6295AA: 8D 54 24 18        - lea edx,[esp+18]
re5dx9.exe+6295AE: 52                 - push edx
re5dx9.exe+6295AF: 53                 - push ebx
re5dx9.exe+6295B0: E9 64 02 00 00     - jmp re5dx9.exe+629819
// ---------- INJECTING HERE ----------
re5dx9.exe+6295B5: 8B BE A8 01 00 00  - mov edi,[esi+000001A8]
// ---------- DONE INJECTING  ----------
re5dx9.exe+6295BB: 57                 - push edi
re5dx9.exe+6295BC: E8 2F 54 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+6295C1: 85 C0              - test eax,eax
re5dx9.exe+6295C3: 74 62              - je re5dx9.exe+629627
re5dx9.exe+6295C5: 8B 6C 24 14        - mov ebp,[esp+14]
re5dx9.exe+6295C9: 89 6C 24 1C        - mov [esp+1C],ebp
re5dx9.exe+6295CD: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+6295D2: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+6295D8: 83 F9 06           - cmp ecx,06
re5dx9.exe+6295DB: 74 08              - je re5dx9.exe+6295E5
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>125</ID>
      <Description>"[00A29665] Shift Key Binding Checker"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-11
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+629665)
define(bytes,8B BE B4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+00000199]
  mov ecx,[0123AD28]
  push edx
  call 0079E9F0
  test eax,eax
  je 00A295A2
  mov ebp,[esp+14]
  mov [esp+1C],ebp
  mov ecx,00000005
  lea edi,[esi+00000195]
loop:
  cmp ecx,09
  je ignore
  test edx,edx
  je ignore
  cmp dl,[edi]
  je 00A2956A
ignore:
  add ecx,01
  add edi,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A29582

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov edi,[esi+000001B4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+629665

re5dx9.exe+629646: D9 44 24 18        - fld dword ptr [esp+18]
re5dx9.exe+62964A: 51                 - push ecx
re5dx9.exe+62964B: D9 1C 24           - fstp dword ptr [esp]
re5dx9.exe+62964E: 8D 4C 24 18        - lea ecx,[esp+18]
re5dx9.exe+629652: 51                 - push ecx
re5dx9.exe+629653: 53                 - push ebx
re5dx9.exe+629654: 68 3E 03 00 00     - push 0000033E
re5dx9.exe+629659: 68 30 3B 0B 01     - push re5dx9.exe+CB3B30
re5dx9.exe+62965E: 8B CE              - mov ecx,esi
re5dx9.exe+629660: E8 3B 0B FF FF     - call re5dx9.exe+61A1A0
// ---------- INJECTING HERE ----------
re5dx9.exe+629665: 8B BE B4 01 00 00  - mov edi,[esi+000001B4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+62966B: 8B 0D 28 AD 23 01  - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+629671: 57                 - push edi
re5dx9.exe+629672: E8 79 53 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+629677: 85 C0              - test eax,eax
re5dx9.exe+629679: 0F 84 23 FF FF FF  - je re5dx9.exe+6295A2
re5dx9.exe+62967F: 8B 6C 24 14        - mov ebp,[esp+14]
re5dx9.exe+629683: 89 6C 24 1C        - mov [esp+1C],ebp
re5dx9.exe+629687: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+62968C: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+629692: 83 F9 09           - cmp ecx,09
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>126</ID>
      <Description>"[00A29475] Main Menu Reload Ready Weapon Binding Check"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-11
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+629475)
define(bytes,8B BE D4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+000001A1]
  push edx
  call 0079E9F0
  test eax,eax
  je 00A294E7
  mov ebp,[esp+14]
  mov [esp+1C],ebp
  mov ecx,00000005
  lea edi,[esi+00000195]
loop:
  cmp ecx,11
  je ignore
  test edx,edx
  je ignore
  cmp dl,[edi]
  je 00A294B2
ignore:
  add ecx,01
  add edi,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A294CA

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov edi,[esi+000001D4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+629475

re5dx9.exe+629453: 68 3E 03 00 00     - push 0000033E
re5dx9.exe+629458: 50                 - push eax
re5dx9.exe+629459: 8B CE              - mov ecx,esi
re5dx9.exe+62945B: E8 A0 0E FF FF     - call re5dx9.exe+61A300
re5dx9.exe+629460: E9 C5 03 00 00     - jmp re5dx9.exe+62982A
re5dx9.exe+629465: 8D 54 24 18        - lea edx,[esp+18]
re5dx9.exe+629469: 52                 - push edx
re5dx9.exe+62946A: 53                 - push ebx
re5dx9.exe+62946B: 68 3E 03 00 00     - push 0000033E
re5dx9.exe+629470: E9 A9 03 00 00     - jmp re5dx9.exe+62981E
// ---------- INJECTING HERE ----------
re5dx9.exe+629475: 8B BE D4 01 00 00  - mov edi,[esi+000001D4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+62947B: 57                 - push edi
re5dx9.exe+62947C: E8 6F 55 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+629481: 85 C0              - test eax,eax
re5dx9.exe+629483: 74 62              - je re5dx9.exe+6294E7
re5dx9.exe+629485: 8B 6C 24 14        - mov ebp,[esp+14]
re5dx9.exe+629489: 89 6C 24 1C        - mov [esp+1C],ebp
re5dx9.exe+62948D: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+629492: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+629498: 83 F9 11           - cmp ecx,11
re5dx9.exe+62949B: 74 08              - je re5dx9.exe+6294A5
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>127</ID>
      <Description>"[00A29525] Shift Key Binding Checker"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-11
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+629525)
define(bytes,8B BE B4 01 00 00)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  movzx edx,byte ptr[esi+00000199]
  mov ecx,[0123AD28]
  push edx
  call 0079E9F0
  test eax,eax
  je 00A295A2
  mov ebp,[esp+14]
  mov [esp+1C],ebp
  mov ecx,00000005
  lea edi,[esi+00000195]
loop:
  cmp ecx,09
  je ignore
  test edx,edx
  je ignore
  cmp dl,[edi]
  je 00A2956A
  ignore:
  add ecx,01
  add edi,01
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp ecx,2D
  jmp vocalizerOFF
vocalizerON:
  cmp ecx,42
vocalizerOFF:
  jl loop
  jmp 00A29582

address:
  jmp newmem
  nop
return:

[DISABLE]

address:
  db bytes
  // mov edi,[esi+000001B4]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+629525

re5dx9.exe+629506: D9 44 24 18        - fld dword ptr [esp+18]
re5dx9.exe+62950A: 51                 - push ecx
re5dx9.exe+62950B: D9 1C 24           - fstp dword ptr [esp]
re5dx9.exe+62950E: 8D 4C 24 18        - lea ecx,[esp+18]
re5dx9.exe+629512: 51                 - push ecx
re5dx9.exe+629513: 53                 - push ebx
re5dx9.exe+629514: 68 3E 03 00 00     - push 0000033E
re5dx9.exe+629519: 68 30 3B 0B 01     - push re5dx9.exe+CB3B30
re5dx9.exe+62951E: 8B CE              - mov ecx,esi
re5dx9.exe+629520: E8 7B 0C FF FF     - call re5dx9.exe+61A1A0
// ---------- INJECTING HERE ----------
re5dx9.exe+629525: 8B BE B4 01 00 00  - mov edi,[esi+000001B4]
// ---------- DONE INJECTING  ----------
re5dx9.exe+62952B: 8B 0D 28 AD 23 01  - mov ecx,[re5dx9.exe+E3AD28]
re5dx9.exe+629531: 57                 - push edi
re5dx9.exe+629532: E8 B9 54 D7 FF     - call re5dx9.exe+39E9F0
re5dx9.exe+629537: 85 C0              - test eax,eax
re5dx9.exe+629539: 74 67              - je re5dx9.exe+6295A2
re5dx9.exe+62953B: 8B 6C 24 14        - mov ebp,[esp+14]
re5dx9.exe+62953F: 89 6C 24 1C        - mov [esp+1C],ebp
re5dx9.exe+629543: B9 05 00 00 00     - mov ecx,00000005
re5dx9.exe+629548: 8D 96 A4 01 00 00  - lea edx,[esi+000001A4]
re5dx9.exe+62954E: 8B FF              - mov edi,edi
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>166</ID>
      <Description>"[00A29910] Main Menu Binding Description Optimization"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+629910)
define(bytes,85 C9 0F B7 04 4D A8 D0 11 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp ecx,4
  jbe ignore
  mov ecx,5
ignore:
  movzx eax,word ptr [ecx*2+0111D0A8]
  test ecx,ecx
  jmp 00A2991A

address:
  jmp newmem
  nop 5
return:

[DISABLE]

address:
  db bytes
  // test ecx,ecx
  // movzx eax,word ptr [ecx*2+re5dx9.exe+D1D0A8]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+629910

re5dx9.exe+6298EE: 80 4C 24 24 02           - or byte ptr [esp+24],02
re5dx9.exe+6298F3: 8B 44 24 24              - mov eax,[esp+24]
re5dx9.exe+6298F7: 8B 0C BD 30 D2 11 01     - mov ecx,[edi*4+re5dx9.exe+D1D230]
re5dx9.exe+6298FE: 50                       - push eax
re5dx9.exe+6298FF: 51                       - push ecx
re5dx9.exe+629900: 8B CE                    - mov ecx,esi
re5dx9.exe+629902: E8 39 0A FF FF           - call re5dx9.exe+61A340
re5dx9.exe+629907: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+62990A: 8B 56 44                 - mov edx,[esi+44]
re5dx9.exe+62990D: 8D 0C 02                 - lea ecx,[edx+eax]
// ---------- INJECTING HERE ----------
re5dx9.exe+629910: 85 C9                    - test ecx,ecx
// ---------- DONE INJECTING  ----------
re5dx9.exe+629912: 0F B7 04 4D A8 D0 11 01  - movzx eax,word ptr [ecx*2+re5dx9.exe+D1D0A8]
re5dx9.exe+62991A: 75 10                    - jne re5dx9.exe+62992C
re5dx9.exe+62991C: 8B 86 90 01 00 00        - mov eax,[esi+00000190]
re5dx9.exe+629922: EB 03                    - jmp re5dx9.exe+629927
re5dx9.exe+629924: 90                       - nop 
re5dx9.exe+629925: 90                       - nop 
re5dx9.exe+629926: 90                       - nop 
re5dx9.exe+629927: 05 18 09 00 00           - add eax,00000918
re5dx9.exe+62992C: 83 BE F8 02 00 00 01     - cmp dword ptr [esi+000002F8],01
re5dx9.exe+629933: B3 14                    - mov bl,14
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>164</ID>
      <Description>"[00A29281] Main Menu New Option Names"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+629281)
define(bytes,0F B7 14 7D 28 CF 11 01)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp edi,2C
  ja newNames
  movzx edx,word ptr [edi*2+0111CF28]
  jmp 00A29289
newNames:
  sub edi,2D
  movzx edx,word ptr [edi*2+0111D0B4]
  add edi,2D
  jmp 00A29289

address:
  jmp newmem
  nop 3
return:

[DISABLE]

address:
  db bytes
  // movzx edx,word ptr [edi*2+re5dx9.exe+D1CF28]

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+629281

re5dx9.exe+629262: 8B CE                    - mov ecx,esi
re5dx9.exe+629264: 89 54 24 14              - mov [esp+14],edx
re5dx9.exe+629268: 50                       - push eax
re5dx9.exe+629269: E8 E2 0D FF FF           - call re5dx9.exe+61A050
re5dx9.exe+62926E: D9 54 24 18              - fst dword ptr [esp+18]
re5dx9.exe+629272: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+629275: 8B 4E 44                 - mov ecx,[esi+44]
re5dx9.exe+629278: 03 F8                    - add edi,eax
re5dx9.exe+62927A: E9 81 6D 7E 02           - jmp 03210000
re5dx9.exe+62927F: 66 90                    - nop 2
// ---------- INJECTING HERE ----------
re5dx9.exe+629281: 0F B7 14 7D 28 CF 11 01  - movzx edx,word ptr [edi*2+re5dx9.exe+D1CF28]
// ---------- DONE INJECTING  ----------
re5dx9.exe+629289: 03 C1                    - add eax,ecx
re5dx9.exe+62928B: 83 F8 0A                 - cmp eax,0A
re5dx9.exe+62928E: 89 6C 24 28              - mov [esp+28],ebp
re5dx9.exe+629292: 74 0A                    - je re5dx9.exe+62929E
re5dx9.exe+629294: 8B 46 4C                 - mov eax,[esi+4C]
re5dx9.exe+629297: 03 C1                    - add eax,ecx
re5dx9.exe+629299: 83 F8 17                 - cmp eax,17
re5dx9.exe+62929C: 75 1A                    - jne re5dx9.exe+6292B8
re5dx9.exe+62929E: 39 4C 24 20              - cmp [esp+20],ecx
re5dx9.exe+6292A2: 75 14                    - jne re5dx9.exe+6292B8
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>167</ID>
      <Description>"[00A298A5] Arrow Down Limit"</Description>
      <LastState Activated="1"/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : re5dx9.exe
  Version: 
  Date   : 2022-01-19
  Author : xxric

  This script does blah blah blah
}

define(address,"re5dx9.exe"+6298A5)
define(bytes,83 FF 26 7D 0C)

[ENABLE]

assert(address,bytes)
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [0111D2F2],00
  jne vocalizerON
  cmp edi,26
  jmp vocalizerOFF
vocalizerON:
  cmp edi,3B
vocalizerOFF:
  jnl 00A298B6
  jmp 00A298AA

address:
  jmp newmem
return:

[DISABLE]

address:
  db bytes
  // cmp edi,26
  // jnl re5dx9.exe+6298B6

dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: re5dx9.exe+6298A5

re5dx9.exe+62987F: 89 5C 24 20           - mov [esp+20],ebx
re5dx9.exe+629883: 0F 8C A7 F9 FF FF     - jl re5dx9.exe+629230
re5dx9.exe+629889: 83 BE F8 02 00 00 00  - cmp dword ptr [esi+000002F8],00
re5dx9.exe+629890: 75 75                 - jne re5dx9.exe+629907
re5dx9.exe+629892: 8B 7E 4C              - mov edi,[esi+4C]
re5dx9.exe+629895: 85 FF                 - test edi,edi
re5dx9.exe+629897: 7E 0C                 - jle re5dx9.exe+6298A5
re5dx9.exe+629899: 68 30 85 FA 00        - push re5dx9.exe+BA8530
re5dx9.exe+62989E: 8B CE                 - mov ecx,esi
re5dx9.exe+6298A0: E8 AB F3 FB FF        - call re5dx9.exe+5E8C50
// ---------- INJECTING HERE ----------
re5dx9.exe+6298A5: 83 FF 26              - cmp edi,26
// ---------- DONE INJECTING  ----------
re5dx9.exe+6298A8: 7D 0C                 - jnl re5dx9.exe+6298B6
re5dx9.exe+6298AA: 68 28 85 FA 00        - push re5dx9.exe+BA8528
re5dx9.exe+6298AF: 8B CE                 - mov ecx,esi
re5dx9.exe+6298B1: E8 9A F3 FB FF        - call re5dx9.exe+5E8C50
re5dx9.exe+6298B6: 8B 7E 44              - mov edi,[esi+44]
re5dx9.exe+6298B9: 8B 46 4C              - mov eax,[esi+4C]
re5dx9.exe+6298BC: 03 C7                 - add eax,edi
re5dx9.exe+6298BE: 83 F8 05              - cmp eax,05
re5dx9.exe+6298C1: 7D 44                 - jnl re5dx9.exe+629907
re5dx9.exe+6298C3: 8B 56 4C              - mov edx,[esi+4C]
}
</AssemblerScript>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"REVOLT.dll"+1E50</Address>
      <Comment>&lt;&lt; Disconnections Here
Disconnection code is at the 
End of Code Section
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"REVOLT.dll"+43BD</Address>
      <Comment>&lt;&lt; Disconnections For
Delay Here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+4BB7C</Address>
      <Comment>&lt;&lt; Disconnection Errors
      Here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+4CB95</Address>
      <Comment>&lt; CALL
(Causes Crash)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+4CBCB</Address>
      <Comment>&lt; CALL
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+4CC28</Address>
      <Comment>&lt; CALL
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+4CC35</Address>
      <Comment>&lt; CALL
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+587AF</Address>
      <Comment>DC Screen here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2E2188</Address>
      <Comment>&lt;&lt; NEWEST CODE 
HERE
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2F10BD</Address>
      <Comment>&lt;&lt; NEWEST CODE
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FB055</Address>
      <Comment>&lt;&lt; NEWEST CODE
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FCAF6</Address>
      <Comment>&lt;&lt; SLOT
CODE!
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FCB3A</Address>
      <Comment>&lt;&lt; SWITCH START
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FCE6E</Address>
      <Comment>&lt;&lt; SWITCH START
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FCF09</Address>
      <Comment>Number 2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FCF16</Address>
      <Comment>&lt;&lt; Root Kick Code
DC's players
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FCF25</Address>
      <Comment>Number 3
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FCF9C</Address>
      <Comment>&lt;&lt; KICKS PLAYER
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FD043</Address>
      <Comment>&lt;&lt; SWITCH START
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FD2CC</Address>
      <Comment>&lt;&lt; SWITCH START
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FD55C</Address>
      <Comment>&lt;&lt; SWITCH START
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FD61C</Address>
      <Comment>&lt;&lt; NOP
Causes DC
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FDA2F</Address>
      <Comment>&lt;&lt; SWITCH START
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FE700</Address>
      <Comment>&lt;&lt; Freeze Code 
Here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FE7C8</Address>
      <Comment>&lt;&lt; Disconnection Here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+2FFC4F</Address>
      <Comment>&lt;&lt; Doesn't allow
Other players to see
your movement
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3043DC</Address>
      <Comment>&lt;&lt; Freezes Character
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+304424</Address>
      <Comment>&lt;&lt; Freezes Character
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3046E9</Address>
      <Comment>DC I/O Here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+30558D</Address>
      <Comment>&lt;&lt; Switch 3
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+30560D</Address>
      <Comment>Switch 4?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+30564B</Address>
      <Comment>&lt;&lt; MORE DC
CODE HERE!!
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3056C4</Address>
      <Comment>&lt;&lt; VALUE OF 
XMM1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+305757</Address>
      <Comment>Switch 5?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+305769</Address>
      <Comment>&lt;&lt; DC's here?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+30578A</Address>
      <Comment>&lt;&lt; Has Code 
That Freezes 
Players
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+305796</Address>
      <Comment>Switch 6?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3059EB</Address>
      <Comment>JMP = MORE LAG
NOP = LESS LAG
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+306131</Address>
      <Comment>&lt;&lt; Checks Connection
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+306E77</Address>
      <Comment>&lt;&lt; Can Freeze 
Players
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+322945</Address>
      <Comment>Removes life bar
Messes up aim
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3261B2</Address>
      <Comment>Player Left "Name"
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+329943</Address>
      <Comment>GUI
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+32994A</Address>
      <Comment>??
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+329951</Address>
      <Comment>&lt;&lt; Respawn Code
&amp; DC
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+329A5F</Address>
      <Comment>&lt;&lt; END
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+32AE3F</Address>
      <Comment>SOME DC CODE HERE
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+32AE93</Address>
      <Comment>Player Left "Name" 
In 007261B2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3879A3</Address>
      <Comment>&lt;&lt; NETWORK
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3879CA</Address>
      <Comment>&lt;&lt; NETWORK
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+387B54</Address>
      <Comment>&lt;&lt; NETWORK
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+39797B</Address>
      <Comment>Switch 0
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397984</Address>
      <Comment>Switch 1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+39798D</Address>
      <Comment>Switch 2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397991</Address>
      <Comment>Movement?
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397996</Address>
      <Comment>Switch 3
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+39799F</Address>
      <Comment>Switch 4
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979A8</Address>
      <Comment>Switch 5
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979AC</Address>
      <Comment>Quickturn Code Here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979B1</Address>
      <Comment>Switch 6
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979BA</Address>
      <Comment>Switch 7
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979C3</Address>
      <Comment>Switch 8
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979CC</Address>
      <Comment>Switch 9
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979D5</Address>
      <Comment>Switch A
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979DE</Address>
      <Comment>Switch B
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979E7</Address>
      <Comment>Switch C
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979F0</Address>
      <Comment>Switch D
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+3979F9</Address>
      <Comment>Switch E
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A02</Address>
      <Comment>Switch F
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A0B</Address>
      <Comment>Switch 10
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A14</Address>
      <Comment>Switch 11
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A1D</Address>
      <Comment>Switch 12
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A26</Address>
      <Comment>Switch 13
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A2F</Address>
      <Comment>Switch 14
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A38</Address>
      <Comment>Switch 15
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A41</Address>
      <Comment>Switch 16
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A4A</Address>
      <Comment>Switch 17
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A53</Address>
      <Comment>Switch 18
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A5C</Address>
      <Comment>Switch 19
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A65</Address>
      <Comment>Switch 1A
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A6E</Address>
      <Comment>Switch 1B
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397A77</Address>
      <Comment>Switch 1C
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B1B</Address>
      <Comment>Switch 0
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B24</Address>
      <Comment>Switch 1
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B2D</Address>
      <Comment>Switch 2
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B36</Address>
      <Comment>Switch 3
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B3F</Address>
      <Comment>Switch 4
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B43</Address>
      <Comment>Quickturn Code
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B48</Address>
      <Comment>Switch 5
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B51</Address>
      <Comment>Switch 6
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+397B5A</Address>
      <Comment>Switch 7
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+39D807</Address>
      <Comment>Freeze  if NOP
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+39D815</Address>
      <Comment>Freeze  if NOP
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+5E63A1</Address>
      <Comment>&lt;&lt; Errors Here
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+776706</Address>
      <Comment>Laser  (Controller &amp; Mouse)
</Comment>
    </DisassemblerComment>
    <DisassemblerComment>
      <Address>"re5dx9.exe"+7767B0</Address>
      <Comment>Enables laser at all times if NOPed
</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
